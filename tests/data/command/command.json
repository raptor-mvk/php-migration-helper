[
  {
    "options": [],
    "_children": [
      {
        "_name": "7.1 to 7.2",
        "version_from": "7.1",
        "version_to": "7.2",
        "expected_result": [
          "Package compatibility report:",
          "Update aws/aws-sdk-php at least to 3.112.5",
          "Update aws/aws-sdk-php-symfony at least to 1.3.0",
          "Update cloudconvert/cloudconvert-php at least to 2.2.1",
          "Update cloudinary/cloudinary_php at least to 1.14.0",
          "Update clue/stream-filter at least to 1.4.1",
          "Update composer/semver at least to 1.5.0",
          "Update composer/xdebug-handler at least to 1.3.3",
          "Update doctrine/annotations at least to 1.7.0",
          "Update doctrine/cache at least to 1.8.0",
          "Update doctrine/collections at least to 1.6.2",
          "Update doctrine/common at least to 2.11.0",
          "Update doctrine/data-fixtures at least to 1.3.2",
          "Update doctrine/dbal at least to 2.9.2",
          "Update doctrine/doctrine-bundle at least to 1.11.2",
          "Update doctrine/doctrine-cache-bundle at least to 1.3.5",
          "Update doctrine/doctrine-fixtures-bundle at least to 3.2.2",
          "Update doctrine/doctrine-migrations-bundle at least to 1.3.2",
          "Update doctrine/event-manager at least to 1.0.0",
          "Update doctrine/inflector at least to 1.3.0",
          "Update doctrine/instantiator at least to 1.2.0",
          "Update doctrine/lexer at least to 1.1.0",
          "Update doctrine/migrations at least to 1.8.1",
          "Update doctrine/orm at least to 2.6.3",
          "Update doctrine/persistence at least to 1.1.1",
          "Update doctrine/reflection at least to 1.0.0",
          "Update drewm/mailchimp-api at least to 2.5.4",
          "Update egulias/email-validator at least to 2.1.11",
          "Update fig/http-message-util at least to 1.1.3",
          "Update fig/link-util at least to 1.0.0",
          "Update firebase/php-jwt at least to 5.0.0",
          "Update fresh/doctrine-enum-bundle at least to 5.3.0",
          "Update friendsofphp/php-cs-fixer at least to 2.15.3",
          "Update friendsofsymfony/oauth-server-bundle at least to 2.0.0",
          "Update friendsofsymfony/oauth2-php at least to 1.2.3",
          "Update friendsofsymfony/rest-bundle at least to 2.5.0",
          "Warning (minor severity): friendsofsymfony/rest-bundle does not have version that is fully compatible with PHP 7.2 (latest known 2.5.0)",
          "Update giggsey/libphonenumber-for-php at least to 8.10.19",
          "Update giggsey/locale at least to 1.7.1",
          "Update google/apiclient at least to 2.4.0",
          "Update google/apiclient-services at least to 0.115",
          "Update google/auth at least to 1.5.2",
          "Update google/cloud-core at least to 1.33.0",
          "Update google/cloud-storage at least to 1.14.0",
          "Update google/crc32 at least to 0.1.0",
          "Update guzzlehttp/guzzle at least to 6.3.3",
          "Update guzzlehttp/promises at least to 1.3.1",
          "Update guzzlehttp/psr7 at least to 1.6.1",
          "Update helpscout/api at least to 2.4.0",
          "Update hoa/compiler at least to 3.17.08.08",
          "Warning (minor severity): hoa/compiler does not have version that is fully compatible with PHP 7.2 (latest known 3.17.08.08)",
          "Update hoa/consistency at least to 1.17.05.02",
          "Update hoa/event at least to 1.17.01.13",
          "Update hoa/exception at least to 1.17.01.16",
          "Update hoa/file at least to 1.17.07.11",
          "Update hoa/iterator at least to 2.17.01.10",
          "Update hoa/math at least to 1.17.05.16",
          "Update hoa/protocol at least to 1.17.01.14",
          "Update hoa/regex at least to 1.17.01.13",
          "Update hoa/stream at least to 1.17.02.21",
          "Update hoa/ustring at least to 4.17.01.16",
          "Update hoa/visitor at least to 2.17.01.16",
          "Update hoa/zformat at least to 1.17.01.10",
          "Update http-interop/http-factory-guzzle at least to 1.0.0",
          "Update incenteev/composer-parameter-handler at least to 2.1.3",
          "Update jdorn/sql-formatter at least to 1.2.17",
          "Update jean85/pretty-package-versions at least to 1.2",
          "Update jms/metadata at least to 2.1.0",
          "Update jms/serializer at least to 3.3.0",
          "Update jms/serializer-bundle at least to 3.4.1",
          "Update kreait/clock at least to 1.0.1",
          "Update kreait/firebase-php at least to 4.32.0",
          "Update kreait/firebase-tokens at least to 1.9.1",
          "Update kreait/gcp-metadata at least to 1.0.1",
          "Update kriswallsmith/assetic at least to 1.4.0",
          "Update ktamas77/firebase-php at least to 2.2.2",
          "Update lcobucci/jwt at least to 3.3.1",
          "Update league/flysystem at least to 1.0.55",
          "Update lexik/jwt-authentication-bundle at least to 2.6.4",
          "Update michelf/php-markdown at least to 1.8.0",
          "Update mobiledetect/mobiledetectlib at least to 2.8.34",
          "Update monolog/monolog at least to 1.25.1",
          "Update mtdowling/jmespath.php at least to 2.4.0",
          "Update myclabs/deep-copy at least to 1.9.3",
          "Update myclabs/php-enum at least to 1.7.2",
          "Update namshi/jose at least to 7.2.3",
          "Update nelmio/cors-bundle at least to 1.5.6",
          "Warning (minor severity): nelmio/cors-bundle does not have version that is fully compatible with PHP 7.2 (latest known 1.5.6)",
          "Update nelmio/api-doc-bundle at least to 2.13.4",
          "Update noxlogic/ratelimit-bundle at least to 1.14.0",
          "Warning (minor severity): noxlogic/ratelimit-bundle does not have version that is fully compatible with PHP 7.2 (latest known 1.14.0)",
          "Update ocramius/package-versions at least to 1.5.1",
          "Update ocramius/proxy-manager at least to 2.2.0",
          "Update opis/json-schema at least to 1.0.18",
          "Update phar-io/manifest at least to 1.0.3",
          "Update phar-io/version at least to 2.0.1",
          "Update php-amqplib/php-amqplib at least to 2.8.0",
          "Update php-amqplib/rabbitmq-bundle at least to 1.14.4",
          "Warning (minor severity): php-amqplib/rabbitmq-bundle does not have version that is fully compatible with PHP 7.2 (latest known 1.14.4)",
          "Update php-cs-fixer/diff at least to 1.3.0",
          "Update php-http/client-common at least to 2.0.0",
          "Update php-http/curl-client at least to 2.0.0",
          "Update php-http/discovery at least to 1.7.0",
          "Update php-http/httplug at least to 2.0.0",
          "Update php-http/message at least to 1.8.0",
          "Update php-http/message-factory at least to 1.0.2",
          "Update php-http/promise at least to 1.0.0",
          "Update phpdocumentor/reflection-common at least to 2.0.0",
          "Update phpdocumentor/reflection-docblock at least to 4.3.2",
          "Update phpdocumentor/type-resolver at least to 1.0.1",
          "Update phpseclib/phpseclib at least to 2.0.23",
          "Update phpspec/prophecy at least to 1.8.1",
          "Update phpunit/php-code-coverage at least to 7.0.0",
          "Update phpunit/php-file-iterator at least to 2.0.2",
          "Update phpunit/php-text-template at least to 1.2.1",
          "Update phpunit/php-timer at least to 2.1.2",
          "Update phpunit/php-token-stream at least to 3.1.1",
          "Update phpunit/phpunit at least to 8.0",
          "Update ql/uri-template at least to 1.1.3",
          "Update ralouphie/getallheaders at least to 3.0.3",
          "Update ramsey/uuid at least to 3.8.0",
          "Update riverline/multipart-parser at least to 2.0.5",
          "Update rize/uri-template at least to 0.3.2",
          "Warning (minor severity): rize/uri-template does not have version that is fully compatible with PHP 7.2 (latest known 0.3.2)",
          "Update sebastian/code-unit-reverse-lookup at least to 1.0.1",
          "Update sebastian/comparator at least to 3.0.2",
          "Update sebastian/diff at least to 3.0.2",
          "Update sebastian/environment at least to 4.2.2",
          "Update sebastian/exporter at least to 3.1.2",
          "Update sebastian/global-state at least to 3.0.0",
          "Update sebastian/object-enumerator at least to 3.0.3",
          "Update sebastian/object-reflector at least to 1.1.1",
          "Update sebastian/recursion-context at least to 3.0.0",
          "Update sebastian/resource-operations at least to 2.0.1",
          "Update sebastian/type at least to 1.0.0",
          "Update sebastian/version at least to 2.0.1",
          "Update sensio/distribution-bundle at least to 5.0.25",
          "Update sensio/generator-bundle at least to 3.1.7",
          "Update sensio/framework-extra-bundle at least to 5.4.1",
          "Update sensiolabs/security-checker at least to 6.0.2",
          "Update sentry/sdk at least to 2.0.4",
          "Update sentry/sentry at least to 2.1.3",
          "Update sentry/sentry-symfony at least to 3.1.0",
          "Update skyeng/php-lemmatizer at least to 1.0.3",
          "Unknown package some_vendor/some_package version 1.2.3",
          "Update suncat/mobile-detect-bundle at least to 1.1.1",
          "Update superbalist/flysystem-google-storage at least to 7.2.1",
          "Update swiftmailer/swiftmailer at least to 6.2.1",
          "Update symfony/assetic-bundle at least to 2.8.2",
          "Update symfony/http-client at least to 4.3.4",
          "Update symfony/http-client-contracts at least to 1.1.6",
          "Update symfony/mime at least to 4.3.4",
          "Update symfony/monolog-bundle at least to 3.1.2",
          "Update symfony/phpunit-bridge at least to 3.4.31",
          "Update symfony/polyfill-apcu at least to 1.12.0",
          "Update symfony/polyfill-ctype at least to 1.12.0",
          "Update symfony/polyfill-iconv at least to 1.12.0",
          "Update symfony/polyfill-intl-icu at least to 1.12.0",
          "Update symfony/polyfill-intl-idn at least to 1.12.0",
          "Update symfony/polyfill-mbstring at least to 1.12.0",
          "Update symfony/polyfill-util at least to 1.12.0",
          "Update symfony/swiftmailer-bundle at least to 3.2.8",
          "Warning (minor severity): symfony/swiftmailer-bundle does not have version that is fully compatible with PHP 7.2 (latest known 3.2.8)",
          "Update symfony/symfony at least to 3.4.31",
          "Update theseer/tokenizer at least to 1.1.3",
          "Update twig/twig at least to 2.11.3",
          "Update webmozart/assert at least to 1.5.0",
          "Update welp/mailchimp-bundle at least to 1.2.3",
          "Update willdurand/jsonp-callback-validator at least to 1.1.0",
          "Update willdurand/negotiation at least to 2.3.1",
          "Update zendframework/zend-code at least to 3.3.2",
          "Update zendframework/zend-diactoros at least to 2.1.3",
          "Update zendframework/zend-eventmanager at least to 3.2.1",
          "\n",
          "Processed 2 files, found 2 files with potential problems",
          "src/test.php",
          "================================================================================",
          "Check that parameter of get_class() cannot be null",
          "\t1\t    $myObj = getMyObj();",
          "\t2\t    $a = get_class($myObj);",
          "--------------------------------------------------------------------------------",
          "Check that parameter of count() is always countable",
          "\t1\t    $myObj = getMyObj();",
          "\t2\t    $a = get_class($myObj);",
          "\t3\t    $arr = '123';",
          "\t4\t    echo count($arr);",
          "--------------------------------------------------------------------------------",
          "Check that result of array_unique with sort_flags = SORT_STRING does not use keys for non-associative arrays (it may be reindexed)",
          "\t5\t    return array_unique ([1, 2, 2, 3])[0];",
          "\t6\t    is_object ($myObj);",
          "\t7\t    if (number_format(-0.01, 0) === '-0') {",
          "\t8\t        return 123;",
          "\t9\t    }",
          "--------------------------------------------------------------------------------",
          "Check that parameter of is_object() cannot be __PHP_Incomplete_Class (now it returns TRUE instead of FALSE)",
          "\t2\t    $a = get_class($myObj);",
          "\t3\t    $arr = '123';",
          "\t4\t    echo count($arr);",
          "\t5\t    return array_unique ([1, 2, 2, 3])[0];",
          "\t6\t    is_object ($myObj);",
          "--------------------------------------------------------------------------------",
          "Check that result of number_format is not compared with \"-0\"",
          "\t7\t    if (number_format(-0.01, 0) === '-0') {",
          "\t8\t        return 123;",
          "\t9\t    }",
          "--------------------------------------------------------------------------------",
          "Check that result of gettype is not compared with \"unknown type\" (for closed resources now it returns \"resource (closed)\")",
          "\t12\t    return (gettype($resource) === 'unknown_type') ? true : false;",
          "\t13\t    bcmod('4', '3.5');",
          "\t14\t    hash_hmac_file('crc32', 'my_data');",
          "--------------------------------------------------------------------------------",
          "Check that bcmod result is not compared to int (now result is not rounded)",
          "\t13\t    bcmod('4', '3.5');",
          "\t14\t    hash_hmac_file('crc32', 'my_data');",
          "\t15\t    return mt_rand (12432523);",
          "--------------------------------------------------------------------------------",
          "Check that hash_hmac, hash_hmac_file, hash_pbkdf2 function do not use one of the following algorithms adler32, crc32, crc32b, fnv132, fnv1a32, fnv164, fnv1a64, joaat",
          "\t12\t    return (gettype($resource) === 'unknown_type') ? true : false;",
          "\t13\t    bcmod('4', '3.5');",
          "\t14\t    hash_hmac_file('crc32', 'my_data');",
          "--------------------------------------------------------------------------------",
          "Check that hash_hmac, hash_hmac_file, hash_pbkdf2 function do not use one of the following algorithms adler32, crc32, crc32b, fnv132, fnv1a32, fnv164, fnv1a64, joaat",
          "\t150\t      }",
          "\t151\t    }",
          "\t152\t    hash_hmac      ('crc32', 'my_data');",
          "--------------------------------------------------------------------------------",
          "Check that hash_hmac, hash_hmac_file, hash_pbkdf2 function do not use one of the following algorithms adler32, crc32, crc32b, fnv132, fnv1a32, fnv164, fnv1a64, joaat",
          "\t151\t    }",
          "\t152\t    hash_hmac      ('crc32', 'my_data');",
          "\t153\t    hash_pbkdf2      ('crc32', 'my_data');",
          "--------------------------------------------------------------------------------",
          "Check that hash_init with HASH_HMAC parameter does not use one of the following algorithms adler32, crc32, crc32b, fnv132, fnv1a32, fnv164, fnv1a64, joaat",
          "\t152\t    hash_hmac      ('crc32', 'my_data');",
          "\t153\t    hash_pbkdf2      ('crc32', 'my_data');",
          "\t154\t    hash_init       ('crc32',        HASH_HMAC);",
          "--------------------------------------------------------------------------------",
          "If rand or mt_rand is called with fixed seed, resulting sequence after migration may differ from current",
          "\t13\t    bcmod('4', '3.5');",
          "\t14\t    hash_hmac_file('crc32', 'my_data');",
          "\t15\t    return mt_rand (12432523);",
          "\t16\t    $string = <<<MYSTR",
          "\t17\t        MYSTR - error!",
          "--------------------------------------------------------------------------------",
          "Check, that value for key \"zone\" in the result of date_parse_from_format is not used (now it contains seconds with inverted sign instead of minutes)",
          "\t30\t    $result = date_parse_from_format('dd.mm.yyyy hh:nn:ssTZ');",
          "\t31\t    echo $result['zone'];",
          "\t32\t    throw new JsonException();",
          "\t33\t    const JSON_THROW_ON_ERROR = 35;",
          "\t34\t    __autoload('vendor/autoload.php');",
          "--------------------------------------------------------------------------------",
          "Replace __autoload() with spl_autoload_register()",
          "\t34\t    __autoload('vendor/autoload.php');",
          "--------------------------------------------------------------------------------",
          "Replace png2wbmp() with imagecreatefrompng() and imagewbmp()",
          "\t35\t    return png2wbmp('my_image.png');",
          "--------------------------------------------------------------------------------",
          "Replace jpeg2wbmp() with imagecreatefromjpeg() and imagewbmp()",
          "\t36\t    return jpeg2wbmp('my_image.jpg');",
          "--------------------------------------------------------------------------------",
          "Replace (unset) cast with call of unset or just NULL",
          "\t51\t    (unset)$myvar;",
          "--------------------------------------------------------------------------------",
          "Check whether parse_str is called with second parameter, now it is necessary",
          "\t52\t    parse_str($a);",
          "--------------------------------------------------------------------------------",
          "Replace gmp_random() with gmp_random_bits() or gmp_random_range()",
          "\t53\t    gmp_random(1, 3);",
          "--------------------------------------------------------------------------------",
          "Replace each() with foreach()",
          "\t54\t    each($arr as $key => $value) {",
          "--------------------------------------------------------------------------------",
          "Check whether assert() is called with string argument. If so, replace with direct call and fix zend.assertions in ini-file",
          "\t52\t    parse_str($a);",
          "\t53\t    gmp_random(1, 3);",
          "\t54\t    each($arr as $key => $value) {",
          "\t55\t        assert('$i = 3');",
          "--------------------------------------------------------------------------------",
          "Check whether assert() is called with string argument. If so, replace with direct call and fix zend.assertions in ini-file",
          "\t56\t    }",
          "\t57\t    filter_var ($t, FILTER_FLAG_SCHEME_REQUIRED, FILTER_FLAG_HOST_REQUIRED);",
          "\t58\t    define('GREETING', 'Hello you.', true);",
          "\t59\t    public static function assert (string $eval) {",
          "--------------------------------------------------------------------------------",
          "Replace $php_errormsg with error_get_last()",
          "\t68\t    var_dump($php_errormsg);",
          "--------------------------------------------------------------------------------",
          "Replace create_function with anonymous function declaration",
          "\t69\t    $myfunc = create_function  ();",
          "--------------------------------------------------------------------------------",
          "Remove usage of $errcontext, use debugger instead",
          "\t70\t    print_r($errcontext);",
          "--------------------------------------------------------------------------------",
          "Replace read_exif_data with exif_read_data",
          "\t73\t    read_exif_data();",
          "--------------------------------------------------------------------------------",
          "Replace INTL_IDNA_VARIANT_2003 with INTL_IDNA_VARIANT_UTS46",
          "\t72\t    echo INTL_IDNA_VARIANT_2003;",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to setUp or setUpBeforeClass",
          "\t105\t    public function          setUp     (        )",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to setUp or setUpBeforeClass",
          "\t108\t    public function    setUpBeforeClass(        )",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to tearDown or tearDownBeforeClass",
          "\t111\t    public function     tearDown(   )                        void",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to tearDown or tearDownBeforeClass",
          "\t114\t    public function tearDownAfterClass(   )",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to assertPreConditions or assertPostConditions",
          "\t117\t    public function assertPreConditions()    id",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to assertPreConditions or assertPostConditions",
          "\t120\t    public function assertPostConditions()",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to onNotSuccessfulTest",
          "\t123\t    public function onNotSuccessfulTest(   )",
          "--------------------------------------------------------------------------------",
          "Replace assertInternalType and assertNotInternalType methods with more specific methods",
          "\t126\t    $this->assertInternalType($abc);",
          "--------------------------------------------------------------------------------",
          "Replace assertInternalType and assertNotInternalType methods with more specific methods",
          "\t127\t    static::assertNotInternalType($def);",
          "--------------------------------------------------------------------------------",
          "Remove assertArraySubset usage, refactor to manual check",
          "\t128\t    self::assertArraySubset(['a', 'b'], ['c', 'd']);",
          "--------------------------------------------------------------------------------",
          "Replace usage of optional arguments of assertEquals and assertNotEquals with more specific assertions",
          "\t129\t    $this->assertEquals($a, $b, 'message', 13);",
          "--------------------------------------------------------------------------------",
          "Replace usage of optional arguments of assertEquals and assertNotEquals with more specific assertions",
          "\t132\t    $this->assertNotEquals($h, $i, 'my message', 'bbb');",
          "--------------------------------------------------------------------------------",
          "Replace usage of assertAttribute-prefixed methods with manual processing",
          "\t135\t    $this->assertAttributeInt(345);",
          "--------------------------------------------------------------------------------",
          "Replace usage of attribute and attributeEqualTo methods with manual processing",
          "\t136\t    static::attribute(ddd);",
          "--------------------------------------------------------------------------------",
          "Replace usage of attribute and attributeEqualTo methods with manual processing",
          "\t137\t    self::attributeEqualTo        ( something);",
          "--------------------------------------------------------------------------------",
          "Replace usage of readAttribute method with manual processing",
          "\t138\t    $this->readAttribute    (   other);",
          "--------------------------------------------------------------------------------",
          "Replace usage of getStaticAttribute or getObjectAttribute methods with manual processing",
          "\t139\t    static::getStaticAttribute(my::attr);",
          "--------------------------------------------------------------------------------",
          "Replace usage of getStaticAttribute or getObjectAttribute methods with manual processing",
          "\t140\t    self::getObjectAttribute(my->attr);",
          "--------------------------------------------------------------------------------",
          "Check that assertContains or assertNotContains does not use string $haystack or additional parameters, otherwise use string-methods assertStringContainsString or assertStringNotContainsString",
          "\t141\t    $this->assertContains($a, [$b]);",
          "--------------------------------------------------------------------------------",
          "Check that assertContains or assertNotContains does not use string $haystack or additional parameters, otherwise use string-methods assertStringContainsString or assertStringNotContainsString",
          "\t142\t    static::assertNotContains    ($c, [$d]);",
          "--------------------------------------------------------------------------------",
          "Remove usage of TestListener",
          "\t143\t    class MyTestListener implements TestListener",
          "--------------------------------------------------------------------------------",
          "Remove usage of expectedException-prefixed annotations",
          "\t146\t       * @expectedExceptionCode 3",
          "\n",
          "vendor/some_vendor/some_package/test.php",
          "================================================================================",
          "Check that parameter of get_class() cannot be null",
          "\t1\t    $myObj = getMyObj();",
          "\t2\t    $a = get_class($myObj);",
          "--------------------------------------------------------------------------------",
          "Check that parameter of count() is always countable",
          "\t1\t    $myObj = getMyObj();",
          "\t2\t    $a = get_class($myObj);",
          "\t3\t    $arr = '123';",
          "\t4\t    echo count($arr);",
          "--------------------------------------------------------------------------------",
          "Check that result of array_unique with sort_flags = SORT_STRING does not use keys for non-associative arrays (it may be reindexed)",
          "\t5\t    return array_unique ([1, 2, 2, 3])[0];",
          "\t6\t    is_object ($myObj);",
          "\t7\t    if (number_format(-0.01, 0) === '-0') {",
          "\t8\t        return 123;",
          "\t9\t    }",
          "--------------------------------------------------------------------------------",
          "Check that parameter of is_object() cannot be __PHP_Incomplete_Class (now it returns TRUE instead of FALSE)",
          "\t2\t    $a = get_class($myObj);",
          "\t3\t    $arr = '123';",
          "\t4\t    echo count($arr);",
          "\t5\t    return array_unique ([1, 2, 2, 3])[0];",
          "\t6\t    is_object ($myObj);",
          "--------------------------------------------------------------------------------",
          "Check that result of number_format is not compared with \"-0\"",
          "\t7\t    if (number_format(-0.01, 0) === '-0') {",
          "\t8\t        return 123;",
          "\t9\t    }",
          "--------------------------------------------------------------------------------",
          "Check that result of gettype is not compared with \"unknown type\" (for closed resources now it returns \"resource (closed)\")",
          "\t12\t    return (gettype($resource) === 'unknown_type') ? true : false;",
          "\t13\t    bcmod('4', '3.5');",
          "\t14\t    hash_hmac_file('crc32', 'my_data');",
          "--------------------------------------------------------------------------------",
          "Check that bcmod result is not compared to int (now result is not rounded)",
          "\t13\t    bcmod('4', '3.5');",
          "\t14\t    hash_hmac_file('crc32', 'my_data');",
          "\t15\t    return mt_rand (12432523);",
          "--------------------------------------------------------------------------------",
          "Check that hash_hmac, hash_hmac_file, hash_pbkdf2 function do not use one of the following algorithms adler32, crc32, crc32b, fnv132, fnv1a32, fnv164, fnv1a64, joaat",
          "\t12\t    return (gettype($resource) === 'unknown_type') ? true : false;",
          "\t13\t    bcmod('4', '3.5');",
          "\t14\t    hash_hmac_file('crc32', 'my_data');",
          "--------------------------------------------------------------------------------",
          "Check that hash_hmac, hash_hmac_file, hash_pbkdf2 function do not use one of the following algorithms adler32, crc32, crc32b, fnv132, fnv1a32, fnv164, fnv1a64, joaat",
          "\t150\t      }",
          "\t151\t    }",
          "\t152\t    hash_hmac      ('crc32', 'my_data');",
          "--------------------------------------------------------------------------------",
          "Check that hash_hmac, hash_hmac_file, hash_pbkdf2 function do not use one of the following algorithms adler32, crc32, crc32b, fnv132, fnv1a32, fnv164, fnv1a64, joaat",
          "\t151\t    }",
          "\t152\t    hash_hmac      ('crc32', 'my_data');",
          "\t153\t    hash_pbkdf2      ('crc32', 'my_data');",
          "--------------------------------------------------------------------------------",
          "Check that hash_init with HASH_HMAC parameter does not use one of the following algorithms adler32, crc32, crc32b, fnv132, fnv1a32, fnv164, fnv1a64, joaat",
          "\t152\t    hash_hmac      ('crc32', 'my_data');",
          "\t153\t    hash_pbkdf2      ('crc32', 'my_data');",
          "\t154\t    hash_init       ('crc32',        HASH_HMAC);",
          "--------------------------------------------------------------------------------",
          "If rand or mt_rand is called with fixed seed, resulting sequence after migration may differ from current",
          "\t13\t    bcmod('4', '3.5');",
          "\t14\t    hash_hmac_file('crc32', 'my_data');",
          "\t15\t    return mt_rand (12432523);",
          "\t16\t    $string = <<<MYSTR",
          "\t17\t        MYSTR - error!",
          "--------------------------------------------------------------------------------",
          "Check, that value for key \"zone\" in the result of date_parse_from_format is not used (now it contains seconds with inverted sign instead of minutes)",
          "\t30\t    $result = date_parse_from_format('dd.mm.yyyy hh:nn:ssTZ');",
          "\t31\t    echo $result['zone'];",
          "\t32\t    throw new JsonException();",
          "\t33\t    const JSON_THROW_ON_ERROR = 35;",
          "\t34\t    __autoload('vendor/autoload.php');",
          "--------------------------------------------------------------------------------",
          "Replace __autoload() with spl_autoload_register()",
          "\t34\t    __autoload('vendor/autoload.php');",
          "--------------------------------------------------------------------------------",
          "Replace png2wbmp() with imagecreatefrompng() and imagewbmp()",
          "\t35\t    return png2wbmp('my_image.png');",
          "--------------------------------------------------------------------------------",
          "Replace jpeg2wbmp() with imagecreatefromjpeg() and imagewbmp()",
          "\t36\t    return jpeg2wbmp('my_image.jpg');",
          "--------------------------------------------------------------------------------",
          "Replace (unset) cast with call of unset or just NULL",
          "\t51\t    (unset)$myvar;",
          "--------------------------------------------------------------------------------",
          "Check whether parse_str is called with second parameter, now it is necessary",
          "\t52\t    parse_str($a);",
          "--------------------------------------------------------------------------------",
          "Replace gmp_random() with gmp_random_bits() or gmp_random_range()",
          "\t53\t    gmp_random(1, 3);",
          "--------------------------------------------------------------------------------",
          "Replace each() with foreach()",
          "\t54\t    each($arr as $key => $value) {",
          "--------------------------------------------------------------------------------",
          "Check whether assert() is called with string argument. If so, replace with direct call and fix zend.assertions in ini-file",
          "\t52\t    parse_str($a);",
          "\t53\t    gmp_random(1, 3);",
          "\t54\t    each($arr as $key => $value) {",
          "\t55\t        assert('$i = 3');",
          "--------------------------------------------------------------------------------",
          "Check whether assert() is called with string argument. If so, replace with direct call and fix zend.assertions in ini-file",
          "\t56\t    }",
          "\t57\t    filter_var ($t, FILTER_FLAG_SCHEME_REQUIRED, FILTER_FLAG_HOST_REQUIRED);",
          "\t58\t    define('GREETING', 'Hello you.', true);",
          "\t59\t    public static function assert (string $eval) {",
          "--------------------------------------------------------------------------------",
          "Replace $php_errormsg with error_get_last()",
          "\t68\t    var_dump($php_errormsg);",
          "--------------------------------------------------------------------------------",
          "Replace create_function with anonymous function declaration",
          "\t69\t    $myfunc = create_function  ();",
          "--------------------------------------------------------------------------------",
          "Remove usage of $errcontext, use debugger instead",
          "\t70\t    print_r($errcontext);",
          "--------------------------------------------------------------------------------",
          "Replace read_exif_data with exif_read_data",
          "\t73\t    read_exif_data();",
          "--------------------------------------------------------------------------------",
          "Replace INTL_IDNA_VARIANT_2003 with INTL_IDNA_VARIANT_UTS46",
          "\t72\t    echo INTL_IDNA_VARIANT_2003;",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to setUp or setUpBeforeClass",
          "\t105\t    public function          setUp     (        )",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to setUp or setUpBeforeClass",
          "\t108\t    public function    setUpBeforeClass(        )",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to tearDown or tearDownBeforeClass",
          "\t111\t    public function     tearDown(   )                        void",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to tearDown or tearDownBeforeClass",
          "\t114\t    public function tearDownAfterClass(   )",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to assertPreConditions or assertPostConditions",
          "\t117\t    public function assertPreConditions()    id",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to assertPreConditions or assertPostConditions",
          "\t120\t    public function assertPostConditions()",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to onNotSuccessfulTest",
          "\t123\t    public function onNotSuccessfulTest(   )",
          "--------------------------------------------------------------------------------",
          "Replace assertInternalType and assertNotInternalType methods with more specific methods",
          "\t126\t    $this->assertInternalType($abc);",
          "--------------------------------------------------------------------------------",
          "Replace assertInternalType and assertNotInternalType methods with more specific methods",
          "\t127\t    static::assertNotInternalType($def);",
          "--------------------------------------------------------------------------------",
          "Remove assertArraySubset usage, refactor to manual check",
          "\t128\t    self::assertArraySubset(['a', 'b'], ['c', 'd']);",
          "--------------------------------------------------------------------------------",
          "Replace usage of optional arguments of assertEquals and assertNotEquals with more specific assertions",
          "\t129\t    $this->assertEquals($a, $b, 'message', 13);",
          "--------------------------------------------------------------------------------",
          "Replace usage of optional arguments of assertEquals and assertNotEquals with more specific assertions",
          "\t132\t    $this->assertNotEquals($h, $i, 'my message', 'bbb');",
          "--------------------------------------------------------------------------------",
          "Replace usage of assertAttribute-prefixed methods with manual processing",
          "\t135\t    $this->assertAttributeInt(345);",
          "--------------------------------------------------------------------------------",
          "Replace usage of attribute and attributeEqualTo methods with manual processing",
          "\t136\t    static::attribute(ddd);",
          "--------------------------------------------------------------------------------",
          "Replace usage of attribute and attributeEqualTo methods with manual processing",
          "\t137\t    self::attributeEqualTo        ( something);",
          "--------------------------------------------------------------------------------",
          "Replace usage of readAttribute method with manual processing",
          "\t138\t    $this->readAttribute    (   other);",
          "--------------------------------------------------------------------------------",
          "Replace usage of getStaticAttribute or getObjectAttribute methods with manual processing",
          "\t139\t    static::getStaticAttribute(my::attr);",
          "--------------------------------------------------------------------------------",
          "Replace usage of getStaticAttribute or getObjectAttribute methods with manual processing",
          "\t140\t    self::getObjectAttribute(my->attr);",
          "--------------------------------------------------------------------------------",
          "Check that assertContains or assertNotContains does not use string $haystack or additional parameters, otherwise use string-methods assertStringContainsString or assertStringNotContainsString",
          "\t141\t    $this->assertContains($a, [$b]);",
          "--------------------------------------------------------------------------------",
          "Check that assertContains or assertNotContains does not use string $haystack or additional parameters, otherwise use string-methods assertStringContainsString or assertStringNotContainsString",
          "\t142\t    static::assertNotContains    ($c, [$d]);",
          "--------------------------------------------------------------------------------",
          "Remove usage of TestListener",
          "\t143\t    class MyTestListener implements TestListener",
          "--------------------------------------------------------------------------------",
          "Remove usage of expectedException-prefixed annotations",
          "\t146\t       * @expectedExceptionCode 3"
        ]
      },
      {
        "_name": "7.1 to 7.3",
        "version_from": "7.1",
        "version_to": "7.3",
        "expected_result": [
          "Package compatibility report:",
          "Update aws/aws-sdk-php at least to 3.112.5",
          "Update aws/aws-sdk-php-symfony at least to 1.3.0",
          "Update cloudconvert/cloudconvert-php at least to 2.2.1",
          "Update cloudinary/cloudinary_php at least to 1.14.0",
          "Update clue/stream-filter at least to 1.4.1",
          "Update composer/semver at least to 1.5.0",
          "Update composer/xdebug-handler at least to 1.3.3",
          "Update doctrine/annotations at least to 1.7.0",
          "Update doctrine/cache at least to 1.8.0",
          "Update doctrine/collections at least to 1.6.2",
          "Update doctrine/common at least to 2.11.0",
          "Update doctrine/data-fixtures at least to 1.3.2",
          "Update doctrine/dbal at least to 2.9.2",
          "Update doctrine/doctrine-bundle at least to 1.11.2",
          "Update doctrine/doctrine-cache-bundle at least to 1.3.5",
          "Update doctrine/doctrine-fixtures-bundle at least to 3.2.2",
          "Update doctrine/doctrine-migrations-bundle at least to 1.3.2",
          "Update doctrine/event-manager at least to 1.0.0",
          "Update doctrine/inflector at least to 1.3.0",
          "Update doctrine/instantiator at least to 1.2.0",
          "Update doctrine/lexer at least to 1.1.0",
          "Update doctrine/migrations at least to 1.8.1",
          "Update doctrine/orm at least to 2.6.3",
          "Update doctrine/persistence at least to 1.1.1",
          "Update doctrine/reflection at least to 1.0.0",
          "Update drewm/mailchimp-api at least to 2.5.4",
          "Update egulias/email-validator at least to 2.1.11",
          "Update fig/http-message-util at least to 1.1.3",
          "Update fig/link-util at least to 1.0.0",
          "Update firebase/php-jwt at least to 5.0.0",
          "Update fresh/doctrine-enum-bundle at least to 5.3.0",
          "Update friendsofphp/php-cs-fixer at least to 2.15.3",
          "Update friendsofsymfony/oauth-server-bundle at least to 2.0.0",
          "Update friendsofsymfony/oauth2-php at least to 1.2.3",
          "Update friendsofsymfony/rest-bundle at least to 2.5.0",
          "Warning (minor severity): friendsofsymfony/rest-bundle does not have version that is fully compatible with PHP 7.3 (latest known 2.5.0)",
          "Update giggsey/libphonenumber-for-php at least to 8.10.19",
          "Update giggsey/locale at least to 1.7.1",
          "Update google/apiclient at least to 2.4.0",
          "Update google/apiclient-services at least to 0.115",
          "Update google/auth at least to 1.5.2",
          "Update google/cloud-core at least to 1.33.0",
          "Update google/cloud-storage at least to 1.14.0",
          "Update google/crc32 at least to 0.1.0",
          "Update guzzlehttp/guzzle at least to 6.3.3",
          "Update guzzlehttp/promises at least to 1.3.1",
          "Update guzzlehttp/psr7 at least to 1.6.1",
          "Update helpscout/api at least to 2.4.0",
          "Update hoa/compiler at least to 3.17.08.08",
          "Warning (minor severity): hoa/compiler does not have version that is fully compatible with PHP 7.3 (latest known 3.17.08.08)",
          "Update hoa/consistency at least to 1.17.05.02",
          "Update hoa/event at least to 1.17.01.13",
          "Update hoa/exception at least to 1.17.01.16",
          "Update hoa/file at least to 1.17.07.11",
          "Update hoa/iterator at least to 2.17.01.10",
          "Update hoa/math at least to 1.17.05.16",
          "Update hoa/protocol at least to 1.17.01.14",
          "Update hoa/regex at least to 1.17.01.13",
          "Update hoa/stream at least to 1.17.02.21",
          "Update hoa/ustring at least to 4.17.01.16",
          "Update hoa/visitor at least to 2.17.01.16",
          "Update hoa/zformat at least to 1.17.01.10",
          "Update http-interop/http-factory-guzzle at least to 1.0.0",
          "Update incenteev/composer-parameter-handler at least to 2.1.3",
          "Update jdorn/sql-formatter at least to 1.2.17",
          "Update jean85/pretty-package-versions at least to 1.2",
          "Update jms/metadata at least to 2.1.0",
          "Update jms/serializer at least to 3.3.0",
          "Update jms/serializer-bundle at least to 3.4.1",
          "Update kreait/clock at least to 1.0.1",
          "Update kreait/firebase-php at least to 4.32.0",
          "Update kreait/firebase-tokens at least to 1.9.1",
          "Update kreait/gcp-metadata at least to 1.0.1",
          "Update kriswallsmith/assetic at least to 1.4.0",
          "Update ktamas77/firebase-php at least to 2.2.2",
          "Update lcobucci/jwt at least to 3.3.1",
          "Update league/flysystem at least to 1.0.55",
          "Update lexik/jwt-authentication-bundle at least to 2.6.4",
          "Update michelf/php-markdown at least to 1.8.0",
          "Update mobiledetect/mobiledetectlib at least to 2.8.34",
          "Update monolog/monolog at least to 1.25.1",
          "Update mtdowling/jmespath.php at least to 2.4.0",
          "Update myclabs/deep-copy at least to 1.9.3",
          "Update myclabs/php-enum at least to 1.7.2",
          "Update namshi/jose at least to 7.2.3",
          "Update nelmio/cors-bundle at least to 1.5.6",
          "Warning (minor severity): nelmio/cors-bundle does not have version that is fully compatible with PHP 7.3 (latest known 1.5.6)",
          "Update nelmio/api-doc-bundle at least to 2.13.4",
          "Update noxlogic/ratelimit-bundle at least to 1.14.0",
          "Warning (minor severity): noxlogic/ratelimit-bundle does not have version that is fully compatible with PHP 7.3 (latest known 1.14.0)",
          "Update ocramius/package-versions at least to 1.5.1",
          "Update ocramius/proxy-manager at least to 2.2.0",
          "Update opis/json-schema at least to 1.0.18",
          "Update phar-io/manifest at least to 1.0.3",
          "Update phar-io/version at least to 2.0.1",
          "Update php-amqplib/php-amqplib at least to 2.8.0",
          "Update php-amqplib/rabbitmq-bundle at least to 1.14.4",
          "Warning (minor severity): php-amqplib/rabbitmq-bundle does not have version that is fully compatible with PHP 7.3 (latest known 1.14.4)",
          "Update php-cs-fixer/diff at least to 1.3.0",
          "Update php-http/client-common at least to 2.0.0",
          "Update php-http/curl-client at least to 2.0.0",
          "Update php-http/discovery at least to 1.7.0",
          "Update php-http/httplug at least to 2.0.0",
          "Update php-http/message at least to 1.8.0",
          "Update php-http/message-factory at least to 1.0.2",
          "Update php-http/promise at least to 1.0.0",
          "Update phpdocumentor/reflection-common at least to 2.0.0",
          "Update phpdocumentor/reflection-docblock at least to 4.3.2",
          "Update phpdocumentor/type-resolver at least to 1.0.1",
          "Update phpseclib/phpseclib at least to 2.0.23",
          "Update phpspec/prophecy at least to 1.8.1",
          "Update phpunit/php-code-coverage at least to 7.0.0",
          "Update phpunit/php-file-iterator at least to 2.0.2",
          "Update phpunit/php-text-template at least to 1.2.1",
          "Update phpunit/php-timer at least to 2.1.2",
          "Update phpunit/php-token-stream at least to 3.1.1",
          "Update phpunit/phpunit at least to 8.0",
          "Update ql/uri-template at least to 1.1.3",
          "Update ralouphie/getallheaders at least to 3.0.3",
          "Update ramsey/uuid at least to 3.8.0",
          "Update riverline/multipart-parser at least to 2.0.5",
          "Update rize/uri-template at least to 0.3.2",
          "Warning (minor severity): rize/uri-template does not have version that is fully compatible with PHP 7.3 (latest known 0.3.2)",
          "Update sebastian/code-unit-reverse-lookup at least to 1.0.1",
          "Update sebastian/comparator at least to 3.0.2",
          "Update sebastian/diff at least to 3.0.2",
          "Update sebastian/environment at least to 4.2.2",
          "Update sebastian/exporter at least to 3.1.2",
          "Update sebastian/global-state at least to 3.0.0",
          "Update sebastian/object-enumerator at least to 3.0.3",
          "Update sebastian/object-reflector at least to 1.1.1",
          "Update sebastian/recursion-context at least to 3.0.0",
          "Update sebastian/resource-operations at least to 2.0.1",
          "Update sebastian/type at least to 1.0.0",
          "Update sebastian/version at least to 2.0.1",
          "Update sensio/distribution-bundle at least to 5.0.25",
          "Update sensio/generator-bundle at least to 3.1.7",
          "Update sensio/framework-extra-bundle at least to 5.4.1",
          "Update sensiolabs/security-checker at least to 6.0.2",
          "Update sentry/sdk at least to 2.0.4",
          "Update sentry/sentry at least to 2.1.3",
          "Update sentry/sentry-symfony at least to 3.1.0",
          "Update skyeng/php-lemmatizer at least to 1.0.3",
          "Unknown package some_vendor/some_package version 1.2.3",
          "Update suncat/mobile-detect-bundle at least to 1.1.1",
          "Update superbalist/flysystem-google-storage at least to 7.2.1",
          "Update swiftmailer/swiftmailer at least to 6.2.1",
          "Update symfony/assetic-bundle at least to 2.8.2",
          "Update symfony/http-client at least to 4.3.4",
          "Update symfony/http-client-contracts at least to 1.1.6",
          "Update symfony/mime at least to 4.3.4",
          "Update symfony/monolog-bundle at least to 3.1.2",
          "Update symfony/phpunit-bridge at least to 3.4.31",
          "Update symfony/polyfill-apcu at least to 1.12.0",
          "Update symfony/polyfill-ctype at least to 1.12.0",
          "Update symfony/polyfill-iconv at least to 1.12.0",
          "Update symfony/polyfill-intl-icu at least to 1.12.0",
          "Update symfony/polyfill-intl-idn at least to 1.12.0",
          "Update symfony/polyfill-mbstring at least to 1.12.0",
          "Update symfony/polyfill-util at least to 1.12.0",
          "Update symfony/swiftmailer-bundle at least to 3.2.8",
          "Warning (minor severity): symfony/swiftmailer-bundle does not have version that is fully compatible with PHP 7.3 (latest known 3.2.8)",
          "Update symfony/symfony at least to 3.4.31",
          "Update theseer/tokenizer at least to 1.1.3",
          "Update twig/twig at least to 2.11.3",
          "Update webmozart/assert at least to 1.5.0",
          "Update welp/mailchimp-bundle at least to 1.2.3",
          "Update willdurand/jsonp-callback-validator at least to 1.1.0",
          "Update willdurand/negotiation at least to 2.3.1",
          "Update zendframework/zend-code at least to 3.3.2",
          "Update zendframework/zend-diactoros at least to 2.1.3",
          "Update zendframework/zend-eventmanager at least to 3.2.1",
          "\n",
          "Processed 2 files, found 2 files with potential problems",
          "src/test.php",
          "================================================================================",
          "Check that parameter of get_class() cannot be null",
          "\t1\t    $myObj = getMyObj();",
          "\t2\t    $a = get_class($myObj);",
          "--------------------------------------------------------------------------------",
          "Check that parameter of count() is always countable",
          "\t1\t    $myObj = getMyObj();",
          "\t2\t    $a = get_class($myObj);",
          "\t3\t    $arr = '123';",
          "\t4\t    echo count($arr);",
          "--------------------------------------------------------------------------------",
          "Check that result of array_unique with sort_flags = SORT_STRING does not use keys for non-associative arrays (it may be reindexed)",
          "\t5\t    return array_unique ([1, 2, 2, 3])[0];",
          "\t6\t    is_object ($myObj);",
          "\t7\t    if (number_format(-0.01, 0) === '-0') {",
          "\t8\t        return 123;",
          "\t9\t    }",
          "--------------------------------------------------------------------------------",
          "Check that parameter of is_object() cannot be __PHP_Incomplete_Class (now it returns TRUE instead of FALSE)",
          "\t2\t    $a = get_class($myObj);",
          "\t3\t    $arr = '123';",
          "\t4\t    echo count($arr);",
          "\t5\t    return array_unique ([1, 2, 2, 3])[0];",
          "\t6\t    is_object ($myObj);",
          "--------------------------------------------------------------------------------",
          "Check that result of number_format is not compared with \"-0\"",
          "\t7\t    if (number_format(-0.01, 0) === '-0') {",
          "\t8\t        return 123;",
          "\t9\t    }",
          "--------------------------------------------------------------------------------",
          "Check that result of gettype is not compared with \"unknown type\" (for closed resources now it returns \"resource (closed)\")",
          "\t12\t    return (gettype($resource) === 'unknown_type') ? true : false;",
          "\t13\t    bcmod('4', '3.5');",
          "\t14\t    hash_hmac_file('crc32', 'my_data');",
          "--------------------------------------------------------------------------------",
          "Check that bcmod result is not compared to int (now result is not rounded)",
          "\t13\t    bcmod('4', '3.5');",
          "\t14\t    hash_hmac_file('crc32', 'my_data');",
          "\t15\t    return mt_rand (12432523);",
          "--------------------------------------------------------------------------------",
          "Check that hash_hmac, hash_hmac_file, hash_pbkdf2 function do not use one of the following algorithms adler32, crc32, crc32b, fnv132, fnv1a32, fnv164, fnv1a64, joaat",
          "\t12\t    return (gettype($resource) === 'unknown_type') ? true : false;",
          "\t13\t    bcmod('4', '3.5');",
          "\t14\t    hash_hmac_file('crc32', 'my_data');",
          "--------------------------------------------------------------------------------",
          "Check that hash_hmac, hash_hmac_file, hash_pbkdf2 function do not use one of the following algorithms adler32, crc32, crc32b, fnv132, fnv1a32, fnv164, fnv1a64, joaat",
          "\t150\t      }",
          "\t151\t    }",
          "\t152\t    hash_hmac      ('crc32', 'my_data');",
          "--------------------------------------------------------------------------------",
          "Check that hash_hmac, hash_hmac_file, hash_pbkdf2 function do not use one of the following algorithms adler32, crc32, crc32b, fnv132, fnv1a32, fnv164, fnv1a64, joaat",
          "\t151\t    }",
          "\t152\t    hash_hmac      ('crc32', 'my_data');",
          "\t153\t    hash_pbkdf2      ('crc32', 'my_data');",
          "--------------------------------------------------------------------------------",
          "Check that hash_init with HASH_HMAC parameter does not use one of the following algorithms adler32, crc32, crc32b, fnv132, fnv1a32, fnv164, fnv1a64, joaat",
          "\t152\t    hash_hmac      ('crc32', 'my_data');",
          "\t153\t    hash_pbkdf2      ('crc32', 'my_data');",
          "\t154\t    hash_init       ('crc32',        HASH_HMAC);",
          "--------------------------------------------------------------------------------",
          "If rand or mt_rand is called with fixed seed, resulting sequence after migration may differ from current",
          "\t13\t    bcmod('4', '3.5');",
          "\t14\t    hash_hmac_file('crc32', 'my_data');",
          "\t15\t    return mt_rand (12432523);",
          "\t16\t    $string = <<<MYSTR",
          "\t17\t        MYSTR - error!",
          "--------------------------------------------------------------------------------",
          "Check, that value for key \"zone\" in the result of date_parse_from_format is not used (now it contains seconds with inverted sign instead of minutes)",
          "\t30\t    $result = date_parse_from_format('dd.mm.yyyy hh:nn:ssTZ');",
          "\t31\t    echo $result['zone'];",
          "\t32\t    throw new JsonException();",
          "\t33\t    const JSON_THROW_ON_ERROR = 35;",
          "\t34\t    __autoload('vendor/autoload.php');",
          "--------------------------------------------------------------------------------",
          "Replace __autoload() with spl_autoload_register()",
          "\t34\t    __autoload('vendor/autoload.php');",
          "--------------------------------------------------------------------------------",
          "Replace png2wbmp() with imagecreatefrompng() and imagewbmp()",
          "\t35\t    return png2wbmp('my_image.png');",
          "--------------------------------------------------------------------------------",
          "Replace jpeg2wbmp() with imagecreatefromjpeg() and imagewbmp()",
          "\t36\t    return jpeg2wbmp('my_image.jpg');",
          "--------------------------------------------------------------------------------",
          "Replace (unset) cast with call of unset or just NULL",
          "\t51\t    (unset)$myvar;",
          "--------------------------------------------------------------------------------",
          "Check whether parse_str is called with second parameter, now it is necessary",
          "\t52\t    parse_str($a);",
          "--------------------------------------------------------------------------------",
          "Replace gmp_random() with gmp_random_bits() or gmp_random_range()",
          "\t53\t    gmp_random(1, 3);",
          "--------------------------------------------------------------------------------",
          "Replace each() with foreach()",
          "\t54\t    each($arr as $key => $value) {",
          "--------------------------------------------------------------------------------",
          "Check whether assert() is called with string argument. If so, replace with direct call and fix zend.assertions in ini-file",
          "\t52\t    parse_str($a);",
          "\t53\t    gmp_random(1, 3);",
          "\t54\t    each($arr as $key => $value) {",
          "\t55\t        assert('$i = 3');",
          "--------------------------------------------------------------------------------",
          "Check whether assert() is called with string argument. If so, replace with direct call and fix zend.assertions in ini-file",
          "\t56\t    }",
          "\t57\t    filter_var ($t, FILTER_FLAG_SCHEME_REQUIRED, FILTER_FLAG_HOST_REQUIRED);",
          "\t58\t    define('GREETING', 'Hello you.', true);",
          "\t59\t    public static function assert (string $eval) {",
          "--------------------------------------------------------------------------------",
          "Replace $php_errormsg with error_get_last()",
          "\t68\t    var_dump($php_errormsg);",
          "--------------------------------------------------------------------------------",
          "Replace create_function with anonymous function declaration",
          "\t69\t    $myfunc = create_function  ();",
          "--------------------------------------------------------------------------------",
          "Remove usage of $errcontext, use debugger instead",
          "\t70\t    print_r($errcontext);",
          "--------------------------------------------------------------------------------",
          "Replace read_exif_data with exif_read_data",
          "\t73\t    read_exif_data();",
          "--------------------------------------------------------------------------------",
          "Replace INTL_IDNA_VARIANT_2003 with INTL_IDNA_VARIANT_UTS46",
          "\t72\t    echo INTL_IDNA_VARIANT_2003;",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to setUp or setUpBeforeClass",
          "\t105\t    public function          setUp     (        )",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to setUp or setUpBeforeClass",
          "\t108\t    public function    setUpBeforeClass(        )",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to tearDown or tearDownBeforeClass",
          "\t111\t    public function     tearDown(   )                        void",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to tearDown or tearDownBeforeClass",
          "\t114\t    public function tearDownAfterClass(   )",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to assertPreConditions or assertPostConditions",
          "\t117\t    public function assertPreConditions()    id",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to assertPreConditions or assertPostConditions",
          "\t120\t    public function assertPostConditions()",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to onNotSuccessfulTest",
          "\t123\t    public function onNotSuccessfulTest(   )",
          "--------------------------------------------------------------------------------",
          "Replace assertInternalType and assertNotInternalType methods with more specific methods",
          "\t126\t    $this->assertInternalType($abc);",
          "--------------------------------------------------------------------------------",
          "Replace assertInternalType and assertNotInternalType methods with more specific methods",
          "\t127\t    static::assertNotInternalType($def);",
          "--------------------------------------------------------------------------------",
          "Remove assertArraySubset usage, refactor to manual check",
          "\t128\t    self::assertArraySubset(['a', 'b'], ['c', 'd']);",
          "--------------------------------------------------------------------------------",
          "Replace usage of optional arguments of assertEquals and assertNotEquals with more specific assertions",
          "\t129\t    $this->assertEquals($a, $b, 'message', 13);",
          "--------------------------------------------------------------------------------",
          "Replace usage of optional arguments of assertEquals and assertNotEquals with more specific assertions",
          "\t132\t    $this->assertNotEquals($h, $i, 'my message', 'bbb');",
          "--------------------------------------------------------------------------------",
          "Replace usage of assertAttribute-prefixed methods with manual processing",
          "\t135\t    $this->assertAttributeInt(345);",
          "--------------------------------------------------------------------------------",
          "Replace usage of attribute and attributeEqualTo methods with manual processing",
          "\t136\t    static::attribute(ddd);",
          "--------------------------------------------------------------------------------",
          "Replace usage of attribute and attributeEqualTo methods with manual processing",
          "\t137\t    self::attributeEqualTo        ( something);",
          "--------------------------------------------------------------------------------",
          "Replace usage of readAttribute method with manual processing",
          "\t138\t    $this->readAttribute    (   other);",
          "--------------------------------------------------------------------------------",
          "Replace usage of getStaticAttribute or getObjectAttribute methods with manual processing",
          "\t139\t    static::getStaticAttribute(my::attr);",
          "--------------------------------------------------------------------------------",
          "Replace usage of getStaticAttribute or getObjectAttribute methods with manual processing",
          "\t140\t    self::getObjectAttribute(my->attr);",
          "--------------------------------------------------------------------------------",
          "Check that assertContains or assertNotContains does not use string $haystack or additional parameters, otherwise use string-methods assertStringContainsString or assertStringNotContainsString",
          "\t141\t    $this->assertContains($a, [$b]);",
          "--------------------------------------------------------------------------------",
          "Check that assertContains or assertNotContains does not use string $haystack or additional parameters, otherwise use string-methods assertStringContainsString or assertStringNotContainsString",
          "\t142\t    static::assertNotContains    ($c, [$d]);",
          "--------------------------------------------------------------------------------",
          "Remove usage of TestListener",
          "\t143\t    class MyTestListener implements TestListener",
          "--------------------------------------------------------------------------------",
          "Remove usage of expectedException-prefixed annotations",
          "\t146\t       * @expectedExceptionCode 3",
          "--------------------------------------------------------------------------------",
          "Check that Heredoc/Nowdoc string does not contain closing identifier inside in the beginning of line",
          "\t16\t    $string = <<<MYSTR",
          "\t17\t        MYSTR - error!",
          "\t18\tMYSTR;",
          "\t19\t    preg_replace('/123/', '11', '1234567');",
          "\t20\t    switch ($a) {",
          "\t21\t        case 123:",
          "\t22\t            echo 123;",
          "--------------------------------------------------------------------------------",
          "Check that pattern corresponds PCRE2 syntax",
          "\t16\t    $string = <<<MYSTR",
          "\t17\t        MYSTR - error!",
          "\t18\tMYSTR;",
          "\t19\t    preg_replace('/123/', '11', '1234567');",
          "\t20\t    switch ($a) {",
          "--------------------------------------------------------------------------------",
          "Check that continue is not inside switch, otherwise change to break or continue 2",
          "\t17\t        MYSTR - error!",
          "\t18\tMYSTR;",
          "\t19\t    preg_replace('/123/', '11', '1234567');",
          "\t20\t    switch ($a) {",
          "\t21\t        case 123:",
          "\t22\t            echo 123;",
          "\t23\t            continue;",
          "--------------------------------------------------------------------------------",
          "Check that JsonException is not in the global namespace (now global JsonException is a part of PHP)",
          "\t29\t    }",
          "\t30\t    $result = date_parse_from_format('dd.mm.yyyy hh:nn:ssTZ');",
          "\t31\t    echo $result['zone'];",
          "\t32\t    throw new JsonException();",
          "--------------------------------------------------------------------------------",
          "Check that JSON_THROW_ON_ERROR is not in the global namespace (now global JSON_THROW_ON_ERROR is a part of PHP)",
          "\t30\t    $result = date_parse_from_format('dd.mm.yyyy hh:nn:ssTZ');",
          "\t31\t    echo $result['zone'];",
          "\t32\t    throw new JsonException();",
          "\t33\t    const JSON_THROW_ON_ERROR = 35;",
          "--------------------------------------------------------------------------------",
          "Check that this is not static field assignment by reference (now they cannot be separated by assignment by reference)",
          "\t38\t    MyClass::$value = &$myVal;",
          "\t39\t    $myVal = 1;",
          "\t40\t    $size = getimagesize('my_image.bmp');",
          "\t41\t    return $size['mime'] === 'image/x-ms-bmp';",
          "--------------------------------------------------------------------------------",
          "Check that value with key \"mime\" of getimagesize result is not compared to image/x-ms-bmp",
          "\t40\t    $size = getimagesize('my_image.bmp');",
          "\t41\t    return $size['mime'] === 'image/x-ms-bmp';",
          "\t42\t    mb_ereg('(?<word>\\w+)', '国', $matches);",
          "\t43\t    strpos($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check usage of mb_ereg_-prefixed functions, now named captures are returned both using their group number and their name",
          "\t42\t    mb_ereg('(?<word>\\w+)', '国', $matches);",
          "\t43\t    strpos($a, $b, $c);",
          "\t44\t    strrpos($a, $b, $c);",
          "\t45\t    stripos($a, $b, $c);",
          "\t46\t    strripos($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t40\t    $size = getimagesize('my_image.bmp');",
          "\t41\t    return $size['mime'] === 'image/x-ms-bmp';",
          "\t42\t    mb_ereg('(?<word>\\w+)', '国', $matches);",
          "\t43\t    strpos($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t41\t    return $size['mime'] === 'image/x-ms-bmp';",
          "\t42\t    mb_ereg('(?<word>\\w+)', '国', $matches);",
          "\t43\t    strpos($a, $b, $c);",
          "\t44\t    strrpos($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t42\t    mb_ereg('(?<word>\\w+)', '国', $matches);",
          "\t43\t    strpos($a, $b, $c);",
          "\t44\t    strrpos($a, $b, $c);",
          "\t45\t    stripos($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t43\t    strpos($a, $b, $c);",
          "\t44\t    strrpos($a, $b, $c);",
          "\t45\t    stripos($a, $b, $c);",
          "\t46\t    strripos($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t44\t    strrpos($a, $b, $c);",
          "\t45\t    stripos($a, $b, $c);",
          "\t46\t    strripos($a, $b, $c);",
          "\t47\t    strstr($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t45\t    stripos($a, $b, $c);",
          "\t46\t    strripos($a, $b, $c);",
          "\t47\t    strstr($a, $b, $c);",
          "\t48\t    strchr($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t46\t    strripos($a, $b, $c);",
          "\t47\t    strstr($a, $b, $c);",
          "\t48\t    strchr($a, $b, $c);",
          "\t49\t    strrchr($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t47\t    strstr($a, $b, $c);",
          "\t48\t    strchr($a, $b, $c);",
          "\t49\t    strrchr($a, $b, $c);",
          "\t50\t    stristr($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Replace image2wbmp() with imagewbmp()",
          "\t37\t    return image2wbmp('my_image.bmp');",
          "--------------------------------------------------------------------------------",
          "Use FILTER_VALIDATE_URL without FILTER_FLAG_SCHEME_REQUIRED",
          "\t57\t    filter_var ($t, FILTER_FLAG_SCHEME_REQUIRED, FILTER_FLAG_HOST_REQUIRED);",
          "--------------------------------------------------------------------------------",
          "Use FILTER_VALIDATE_URL without FILTER_FLAG_HOST_REQUIRED",
          "\t57\t    filter_var ($t, FILTER_FLAG_SCHEME_REQUIRED, FILTER_FLAG_HOST_REQUIRED);",
          "--------------------------------------------------------------------------------",
          "Check whether case insensitive const is defined. If so, replace with usual const declaration and check all usages",
          "\t58\t    define('GREETING', 'Hello you.', true);",
          "--------------------------------------------------------------------------------",
          "Check whether assert is declared inside namespace, now it is forbidden, change function name",
          "\t59\t    public static function assert (string $eval) {",
          "--------------------------------------------------------------------------------",
          "Replace fgetss with fgets and manual tag removal",
          "\t62\t    fgetss('AAA<b>BBB</b>');",
          "--------------------------------------------------------------------------------",
          "Replace gzgetss with gzgets and manual tag removal",
          "\t63\t    gzgetss('AAA<b>BBB</b>');",
          "--------------------------------------------------------------------------------",
          "Replace stream filter string.strip_tags with manual tag removal",
          "\t64\t    stream_filter_append($fp, 'string.strip_tags');",
          "--------------------------------------------------------------------------------",
          "Replace mbregex_encoding with mb_regex_encoding",
          "\t65\t    mbregex_encoding($a, $b, $c)",
          "--------------------------------------------------------------------------------",
          "Replace mbsplit with mb_split",
          "\t67\t    mbsplit($a, $b, $c)",
          "--------------------------------------------------------------------------------",
          "Replace mbereg-prefixed function with corresponding mb_ereg_-prefixed function",
          "\t66\t    mbereg($a, $b, $c)",
          "\n",
          "vendor/some_vendor/some_package/test.php",
          "================================================================================",
          "Check that parameter of get_class() cannot be null",
          "\t1\t    $myObj = getMyObj();",
          "\t2\t    $a = get_class($myObj);",
          "--------------------------------------------------------------------------------",
          "Check that parameter of count() is always countable",
          "\t1\t    $myObj = getMyObj();",
          "\t2\t    $a = get_class($myObj);",
          "\t3\t    $arr = '123';",
          "\t4\t    echo count($arr);",
          "--------------------------------------------------------------------------------",
          "Check that result of array_unique with sort_flags = SORT_STRING does not use keys for non-associative arrays (it may be reindexed)",
          "\t5\t    return array_unique ([1, 2, 2, 3])[0];",
          "\t6\t    is_object ($myObj);",
          "\t7\t    if (number_format(-0.01, 0) === '-0') {",
          "\t8\t        return 123;",
          "\t9\t    }",
          "--------------------------------------------------------------------------------",
          "Check that parameter of is_object() cannot be __PHP_Incomplete_Class (now it returns TRUE instead of FALSE)",
          "\t2\t    $a = get_class($myObj);",
          "\t3\t    $arr = '123';",
          "\t4\t    echo count($arr);",
          "\t5\t    return array_unique ([1, 2, 2, 3])[0];",
          "\t6\t    is_object ($myObj);",
          "--------------------------------------------------------------------------------",
          "Check that result of number_format is not compared with \"-0\"",
          "\t7\t    if (number_format(-0.01, 0) === '-0') {",
          "\t8\t        return 123;",
          "\t9\t    }",
          "--------------------------------------------------------------------------------",
          "Check that result of gettype is not compared with \"unknown type\" (for closed resources now it returns \"resource (closed)\")",
          "\t12\t    return (gettype($resource) === 'unknown_type') ? true : false;",
          "\t13\t    bcmod('4', '3.5');",
          "\t14\t    hash_hmac_file('crc32', 'my_data');",
          "--------------------------------------------------------------------------------",
          "Check that bcmod result is not compared to int (now result is not rounded)",
          "\t13\t    bcmod('4', '3.5');",
          "\t14\t    hash_hmac_file('crc32', 'my_data');",
          "\t15\t    return mt_rand (12432523);",
          "--------------------------------------------------------------------------------",
          "Check that hash_hmac, hash_hmac_file, hash_pbkdf2 function do not use one of the following algorithms adler32, crc32, crc32b, fnv132, fnv1a32, fnv164, fnv1a64, joaat",
          "\t12\t    return (gettype($resource) === 'unknown_type') ? true : false;",
          "\t13\t    bcmod('4', '3.5');",
          "\t14\t    hash_hmac_file('crc32', 'my_data');",
          "--------------------------------------------------------------------------------",
          "Check that hash_hmac, hash_hmac_file, hash_pbkdf2 function do not use one of the following algorithms adler32, crc32, crc32b, fnv132, fnv1a32, fnv164, fnv1a64, joaat",
          "\t150\t      }",
          "\t151\t    }",
          "\t152\t    hash_hmac      ('crc32', 'my_data');",
          "--------------------------------------------------------------------------------",
          "Check that hash_hmac, hash_hmac_file, hash_pbkdf2 function do not use one of the following algorithms adler32, crc32, crc32b, fnv132, fnv1a32, fnv164, fnv1a64, joaat",
          "\t151\t    }",
          "\t152\t    hash_hmac      ('crc32', 'my_data');",
          "\t153\t    hash_pbkdf2      ('crc32', 'my_data');",
          "--------------------------------------------------------------------------------",
          "Check that hash_init with HASH_HMAC parameter does not use one of the following algorithms adler32, crc32, crc32b, fnv132, fnv1a32, fnv164, fnv1a64, joaat",
          "\t152\t    hash_hmac      ('crc32', 'my_data');",
          "\t153\t    hash_pbkdf2      ('crc32', 'my_data');",
          "\t154\t    hash_init       ('crc32',        HASH_HMAC);",
          "--------------------------------------------------------------------------------",
          "If rand or mt_rand is called with fixed seed, resulting sequence after migration may differ from current",
          "\t13\t    bcmod('4', '3.5');",
          "\t14\t    hash_hmac_file('crc32', 'my_data');",
          "\t15\t    return mt_rand (12432523);",
          "\t16\t    $string = <<<MYSTR",
          "\t17\t        MYSTR - error!",
          "--------------------------------------------------------------------------------",
          "Check, that value for key \"zone\" in the result of date_parse_from_format is not used (now it contains seconds with inverted sign instead of minutes)",
          "\t30\t    $result = date_parse_from_format('dd.mm.yyyy hh:nn:ssTZ');",
          "\t31\t    echo $result['zone'];",
          "\t32\t    throw new JsonException();",
          "\t33\t    const JSON_THROW_ON_ERROR = 35;",
          "\t34\t    __autoload('vendor/autoload.php');",
          "--------------------------------------------------------------------------------",
          "Replace __autoload() with spl_autoload_register()",
          "\t34\t    __autoload('vendor/autoload.php');",
          "--------------------------------------------------------------------------------",
          "Replace png2wbmp() with imagecreatefrompng() and imagewbmp()",
          "\t35\t    return png2wbmp('my_image.png');",
          "--------------------------------------------------------------------------------",
          "Replace jpeg2wbmp() with imagecreatefromjpeg() and imagewbmp()",
          "\t36\t    return jpeg2wbmp('my_image.jpg');",
          "--------------------------------------------------------------------------------",
          "Replace (unset) cast with call of unset or just NULL",
          "\t51\t    (unset)$myvar;",
          "--------------------------------------------------------------------------------",
          "Check whether parse_str is called with second parameter, now it is necessary",
          "\t52\t    parse_str($a);",
          "--------------------------------------------------------------------------------",
          "Replace gmp_random() with gmp_random_bits() or gmp_random_range()",
          "\t53\t    gmp_random(1, 3);",
          "--------------------------------------------------------------------------------",
          "Replace each() with foreach()",
          "\t54\t    each($arr as $key => $value) {",
          "--------------------------------------------------------------------------------",
          "Check whether assert() is called with string argument. If so, replace with direct call and fix zend.assertions in ini-file",
          "\t52\t    parse_str($a);",
          "\t53\t    gmp_random(1, 3);",
          "\t54\t    each($arr as $key => $value) {",
          "\t55\t        assert('$i = 3');",
          "--------------------------------------------------------------------------------",
          "Check whether assert() is called with string argument. If so, replace with direct call and fix zend.assertions in ini-file",
          "\t56\t    }",
          "\t57\t    filter_var ($t, FILTER_FLAG_SCHEME_REQUIRED, FILTER_FLAG_HOST_REQUIRED);",
          "\t58\t    define('GREETING', 'Hello you.', true);",
          "\t59\t    public static function assert (string $eval) {",
          "--------------------------------------------------------------------------------",
          "Replace $php_errormsg with error_get_last()",
          "\t68\t    var_dump($php_errormsg);",
          "--------------------------------------------------------------------------------",
          "Replace create_function with anonymous function declaration",
          "\t69\t    $myfunc = create_function  ();",
          "--------------------------------------------------------------------------------",
          "Remove usage of $errcontext, use debugger instead",
          "\t70\t    print_r($errcontext);",
          "--------------------------------------------------------------------------------",
          "Replace read_exif_data with exif_read_data",
          "\t73\t    read_exif_data();",
          "--------------------------------------------------------------------------------",
          "Replace INTL_IDNA_VARIANT_2003 with INTL_IDNA_VARIANT_UTS46",
          "\t72\t    echo INTL_IDNA_VARIANT_2003;",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to setUp or setUpBeforeClass",
          "\t105\t    public function          setUp     (        )",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to setUp or setUpBeforeClass",
          "\t108\t    public function    setUpBeforeClass(        )",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to tearDown or tearDownBeforeClass",
          "\t111\t    public function     tearDown(   )                        void",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to tearDown or tearDownBeforeClass",
          "\t114\t    public function tearDownAfterClass(   )",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to assertPreConditions or assertPostConditions",
          "\t117\t    public function assertPreConditions()    id",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to assertPreConditions or assertPostConditions",
          "\t120\t    public function assertPostConditions()",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to onNotSuccessfulTest",
          "\t123\t    public function onNotSuccessfulTest(   )",
          "--------------------------------------------------------------------------------",
          "Replace assertInternalType and assertNotInternalType methods with more specific methods",
          "\t126\t    $this->assertInternalType($abc);",
          "--------------------------------------------------------------------------------",
          "Replace assertInternalType and assertNotInternalType methods with more specific methods",
          "\t127\t    static::assertNotInternalType($def);",
          "--------------------------------------------------------------------------------",
          "Remove assertArraySubset usage, refactor to manual check",
          "\t128\t    self::assertArraySubset(['a', 'b'], ['c', 'd']);",
          "--------------------------------------------------------------------------------",
          "Replace usage of optional arguments of assertEquals and assertNotEquals with more specific assertions",
          "\t129\t    $this->assertEquals($a, $b, 'message', 13);",
          "--------------------------------------------------------------------------------",
          "Replace usage of optional arguments of assertEquals and assertNotEquals with more specific assertions",
          "\t132\t    $this->assertNotEquals($h, $i, 'my message', 'bbb');",
          "--------------------------------------------------------------------------------",
          "Replace usage of assertAttribute-prefixed methods with manual processing",
          "\t135\t    $this->assertAttributeInt(345);",
          "--------------------------------------------------------------------------------",
          "Replace usage of attribute and attributeEqualTo methods with manual processing",
          "\t136\t    static::attribute(ddd);",
          "--------------------------------------------------------------------------------",
          "Replace usage of attribute and attributeEqualTo methods with manual processing",
          "\t137\t    self::attributeEqualTo        ( something);",
          "--------------------------------------------------------------------------------",
          "Replace usage of readAttribute method with manual processing",
          "\t138\t    $this->readAttribute    (   other);",
          "--------------------------------------------------------------------------------",
          "Replace usage of getStaticAttribute or getObjectAttribute methods with manual processing",
          "\t139\t    static::getStaticAttribute(my::attr);",
          "--------------------------------------------------------------------------------",
          "Replace usage of getStaticAttribute or getObjectAttribute methods with manual processing",
          "\t140\t    self::getObjectAttribute(my->attr);",
          "--------------------------------------------------------------------------------",
          "Check that assertContains or assertNotContains does not use string $haystack or additional parameters, otherwise use string-methods assertStringContainsString or assertStringNotContainsString",
          "\t141\t    $this->assertContains($a, [$b]);",
          "--------------------------------------------------------------------------------",
          "Check that assertContains or assertNotContains does not use string $haystack or additional parameters, otherwise use string-methods assertStringContainsString or assertStringNotContainsString",
          "\t142\t    static::assertNotContains    ($c, [$d]);",
          "--------------------------------------------------------------------------------",
          "Remove usage of TestListener",
          "\t143\t    class MyTestListener implements TestListener",
          "--------------------------------------------------------------------------------",
          "Remove usage of expectedException-prefixed annotations",
          "\t146\t       * @expectedExceptionCode 3",
          "--------------------------------------------------------------------------------",
          "Check that Heredoc/Nowdoc string does not contain closing identifier inside in the beginning of line",
          "\t16\t    $string = <<<MYSTR",
          "\t17\t        MYSTR - error!",
          "\t18\tMYSTR;",
          "\t19\t    preg_replace('/123/', '11', '1234567');",
          "\t20\t    switch ($a) {",
          "\t21\t        case 123:",
          "\t22\t            echo 123;",
          "--------------------------------------------------------------------------------",
          "Check that pattern corresponds PCRE2 syntax",
          "\t16\t    $string = <<<MYSTR",
          "\t17\t        MYSTR - error!",
          "\t18\tMYSTR;",
          "\t19\t    preg_replace('/123/', '11', '1234567');",
          "\t20\t    switch ($a) {",
          "--------------------------------------------------------------------------------",
          "Check that continue is not inside switch, otherwise change to break or continue 2",
          "\t17\t        MYSTR - error!",
          "\t18\tMYSTR;",
          "\t19\t    preg_replace('/123/', '11', '1234567');",
          "\t20\t    switch ($a) {",
          "\t21\t        case 123:",
          "\t22\t            echo 123;",
          "\t23\t            continue;",
          "--------------------------------------------------------------------------------",
          "Check that JsonException is not in the global namespace (now global JsonException is a part of PHP)",
          "\t29\t    }",
          "\t30\t    $result = date_parse_from_format('dd.mm.yyyy hh:nn:ssTZ');",
          "\t31\t    echo $result['zone'];",
          "\t32\t    throw new JsonException();",
          "--------------------------------------------------------------------------------",
          "Check that JSON_THROW_ON_ERROR is not in the global namespace (now global JSON_THROW_ON_ERROR is a part of PHP)",
          "\t30\t    $result = date_parse_from_format('dd.mm.yyyy hh:nn:ssTZ');",
          "\t31\t    echo $result['zone'];",
          "\t32\t    throw new JsonException();",
          "\t33\t    const JSON_THROW_ON_ERROR = 35;",
          "--------------------------------------------------------------------------------",
          "Check that this is not static field assignment by reference (now they cannot be separated by assignment by reference)",
          "\t38\t    MyClass::$value = &$myVal;",
          "\t39\t    $myVal = 1;",
          "\t40\t    $size = getimagesize('my_image.bmp');",
          "\t41\t    return $size['mime'] === 'image/x-ms-bmp';",
          "--------------------------------------------------------------------------------",
          "Check that value with key \"mime\" of getimagesize result is not compared to image/x-ms-bmp",
          "\t40\t    $size = getimagesize('my_image.bmp');",
          "\t41\t    return $size['mime'] === 'image/x-ms-bmp';",
          "\t42\t    mb_ereg('(?<word>\\w+)', '国', $matches);",
          "\t43\t    strpos($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check usage of mb_ereg_-prefixed functions, now named captures are returned both using their group number and their name",
          "\t42\t    mb_ereg('(?<word>\\w+)', '国', $matches);",
          "\t43\t    strpos($a, $b, $c);",
          "\t44\t    strrpos($a, $b, $c);",
          "\t45\t    stripos($a, $b, $c);",
          "\t46\t    strripos($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t40\t    $size = getimagesize('my_image.bmp');",
          "\t41\t    return $size['mime'] === 'image/x-ms-bmp';",
          "\t42\t    mb_ereg('(?<word>\\w+)', '国', $matches);",
          "\t43\t    strpos($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t41\t    return $size['mime'] === 'image/x-ms-bmp';",
          "\t42\t    mb_ereg('(?<word>\\w+)', '国', $matches);",
          "\t43\t    strpos($a, $b, $c);",
          "\t44\t    strrpos($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t42\t    mb_ereg('(?<word>\\w+)', '国', $matches);",
          "\t43\t    strpos($a, $b, $c);",
          "\t44\t    strrpos($a, $b, $c);",
          "\t45\t    stripos($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t43\t    strpos($a, $b, $c);",
          "\t44\t    strrpos($a, $b, $c);",
          "\t45\t    stripos($a, $b, $c);",
          "\t46\t    strripos($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t44\t    strrpos($a, $b, $c);",
          "\t45\t    stripos($a, $b, $c);",
          "\t46\t    strripos($a, $b, $c);",
          "\t47\t    strstr($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t45\t    stripos($a, $b, $c);",
          "\t46\t    strripos($a, $b, $c);",
          "\t47\t    strstr($a, $b, $c);",
          "\t48\t    strchr($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t46\t    strripos($a, $b, $c);",
          "\t47\t    strstr($a, $b, $c);",
          "\t48\t    strchr($a, $b, $c);",
          "\t49\t    strrchr($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t47\t    strstr($a, $b, $c);",
          "\t48\t    strchr($a, $b, $c);",
          "\t49\t    strrchr($a, $b, $c);",
          "\t50\t    stristr($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Replace image2wbmp() with imagewbmp()",
          "\t37\t    return image2wbmp('my_image.bmp');",
          "--------------------------------------------------------------------------------",
          "Use FILTER_VALIDATE_URL without FILTER_FLAG_SCHEME_REQUIRED",
          "\t57\t    filter_var ($t, FILTER_FLAG_SCHEME_REQUIRED, FILTER_FLAG_HOST_REQUIRED);",
          "--------------------------------------------------------------------------------",
          "Use FILTER_VALIDATE_URL without FILTER_FLAG_HOST_REQUIRED",
          "\t57\t    filter_var ($t, FILTER_FLAG_SCHEME_REQUIRED, FILTER_FLAG_HOST_REQUIRED);",
          "--------------------------------------------------------------------------------",
          "Check whether case insensitive const is defined. If so, replace with usual const declaration and check all usages",
          "\t58\t    define('GREETING', 'Hello you.', true);",
          "--------------------------------------------------------------------------------",
          "Check whether assert is declared inside namespace, now it is forbidden, change function name",
          "\t59\t    public static function assert (string $eval) {",
          "--------------------------------------------------------------------------------",
          "Replace fgetss with fgets and manual tag removal",
          "\t62\t    fgetss('AAA<b>BBB</b>');",
          "--------------------------------------------------------------------------------",
          "Replace gzgetss with gzgets and manual tag removal",
          "\t63\t    gzgetss('AAA<b>BBB</b>');",
          "--------------------------------------------------------------------------------",
          "Replace stream filter string.strip_tags with manual tag removal",
          "\t64\t    stream_filter_append($fp, 'string.strip_tags');",
          "--------------------------------------------------------------------------------",
          "Replace mbregex_encoding with mb_regex_encoding",
          "\t65\t    mbregex_encoding($a, $b, $c)",
          "--------------------------------------------------------------------------------",
          "Replace mbsplit with mb_split",
          "\t67\t    mbsplit($a, $b, $c)",
          "--------------------------------------------------------------------------------",
          "Replace mbereg-prefixed function with corresponding mb_ereg_-prefixed function",
          "\t66\t    mbereg($a, $b, $c)"
        ]
      },
      {
        "_name": "7.2 to 7.3",
        "version_from": "7.2",
        "version_to": "7.3",
        "expected_result": [
          "Package compatibility report:",
          "Update aws/aws-sdk-php at least to 3.112.5",
          "Update aws/aws-sdk-php-symfony at least to 1.3.0",
          "Update cloudconvert/cloudconvert-php at least to 2.2.1",
          "Update cloudinary/cloudinary_php at least to 1.14.0",
          "Update clue/stream-filter at least to 1.4.1",
          "Update composer/semver at least to 1.5.0",
          "Update composer/xdebug-handler at least to 1.3.3",
          "Update doctrine/annotations at least to 1.7.0",
          "Update doctrine/cache at least to 1.8.0",
          "Update doctrine/collections at least to 1.6.2",
          "Update doctrine/common at least to 2.11.0",
          "Update doctrine/data-fixtures at least to 1.3.2",
          "Update doctrine/dbal at least to 2.9.2",
          "Update doctrine/doctrine-bundle at least to 1.11.2",
          "Update doctrine/doctrine-cache-bundle at least to 1.3.5",
          "Update doctrine/doctrine-fixtures-bundle at least to 3.2.2",
          "Update doctrine/doctrine-migrations-bundle at least to 1.3.2",
          "Update doctrine/event-manager at least to 1.0.0",
          "Update doctrine/inflector at least to 1.3.0",
          "Update doctrine/instantiator at least to 1.2.0",
          "Update doctrine/lexer at least to 1.1.0",
          "Update doctrine/migrations at least to 1.8.1",
          "Update doctrine/orm at least to 2.6.3",
          "Update doctrine/persistence at least to 1.1.1",
          "Update doctrine/reflection at least to 1.0.0",
          "Update drewm/mailchimp-api at least to 2.5.4",
          "Update egulias/email-validator at least to 2.1.11",
          "Update fig/http-message-util at least to 1.1.3",
          "Update fig/link-util at least to 1.0.0",
          "Update firebase/php-jwt at least to 5.0.0",
          "Update fresh/doctrine-enum-bundle at least to 5.3.0",
          "Update friendsofphp/php-cs-fixer at least to 2.15.3",
          "Update friendsofsymfony/oauth-server-bundle at least to 2.0.0",
          "Update friendsofsymfony/oauth2-php at least to 1.2.3",
          "Update friendsofsymfony/rest-bundle at least to 2.5.0",
          "Warning (minor severity): friendsofsymfony/rest-bundle does not have version that is fully compatible with PHP 7.3 (latest known 2.5.0)",
          "Update giggsey/libphonenumber-for-php at least to 8.10.19",
          "Update giggsey/locale at least to 1.7.1",
          "Update google/apiclient at least to 2.4.0",
          "Update google/apiclient-services at least to 0.115",
          "Update google/auth at least to 1.5.2",
          "Update google/cloud-core at least to 1.33.0",
          "Update google/cloud-storage at least to 1.14.0",
          "Update google/crc32 at least to 0.1.0",
          "Update guzzlehttp/guzzle at least to 6.3.3",
          "Update guzzlehttp/promises at least to 1.3.1",
          "Update guzzlehttp/psr7 at least to 1.6.1",
          "Update helpscout/api at least to 2.4.0",
          "Update hoa/compiler at least to 3.17.08.08",
          "Warning (minor severity): hoa/compiler does not have version that is fully compatible with PHP 7.3 (latest known 3.17.08.08)",
          "Update hoa/consistency at least to 1.17.05.02",
          "Update hoa/event at least to 1.17.01.13",
          "Update hoa/exception at least to 1.17.01.16",
          "Update hoa/file at least to 1.17.07.11",
          "Update hoa/iterator at least to 2.17.01.10",
          "Update hoa/math at least to 1.17.05.16",
          "Update hoa/protocol at least to 1.17.01.14",
          "Update hoa/regex at least to 1.17.01.13",
          "Update hoa/stream at least to 1.17.02.21",
          "Update hoa/ustring at least to 4.17.01.16",
          "Update hoa/visitor at least to 2.17.01.16",
          "Update hoa/zformat at least to 1.17.01.10",
          "Update http-interop/http-factory-guzzle at least to 1.0.0",
          "Update incenteev/composer-parameter-handler at least to 2.1.3",
          "Update jdorn/sql-formatter at least to 1.2.17",
          "Update jean85/pretty-package-versions at least to 1.2",
          "Update jms/metadata at least to 2.1.0",
          "Update jms/serializer at least to 3.3.0",
          "Update jms/serializer-bundle at least to 3.4.1",
          "Update kreait/clock at least to 1.0.1",
          "Update kreait/firebase-php at least to 4.32.0",
          "Update kreait/firebase-tokens at least to 1.9.1",
          "Update kreait/gcp-metadata at least to 1.0.1",
          "Update kriswallsmith/assetic at least to 1.4.0",
          "Update ktamas77/firebase-php at least to 2.2.2",
          "Update lcobucci/jwt at least to 3.3.1",
          "Update league/flysystem at least to 1.0.55",
          "Update lexik/jwt-authentication-bundle at least to 2.6.4",
          "Update michelf/php-markdown at least to 1.8.0",
          "Update mobiledetect/mobiledetectlib at least to 2.8.34",
          "Update monolog/monolog at least to 1.25.1",
          "Update mtdowling/jmespath.php at least to 2.4.0",
          "Update myclabs/deep-copy at least to 1.9.3",
          "Update myclabs/php-enum at least to 1.7.2",
          "Update namshi/jose at least to 7.2.3",
          "Update nelmio/cors-bundle at least to 1.5.6",
          "Warning (minor severity): nelmio/cors-bundle does not have version that is fully compatible with PHP 7.3 (latest known 1.5.6)",
          "Update nelmio/api-doc-bundle at least to 2.13.4",
          "Update noxlogic/ratelimit-bundle at least to 1.14.0",
          "Warning (minor severity): noxlogic/ratelimit-bundle does not have version that is fully compatible with PHP 7.3 (latest known 1.14.0)",
          "Update ocramius/package-versions at least to 1.5.1",
          "Update ocramius/proxy-manager at least to 2.2.0",
          "Update opis/json-schema at least to 1.0.18",
          "Update phar-io/manifest at least to 1.0.3",
          "Update phar-io/version at least to 2.0.1",
          "Update php-amqplib/php-amqplib at least to 2.8.0",
          "Update php-amqplib/rabbitmq-bundle at least to 1.14.4",
          "Warning (minor severity): php-amqplib/rabbitmq-bundle does not have version that is fully compatible with PHP 7.3 (latest known 1.14.4)",
          "Update php-cs-fixer/diff at least to 1.3.0",
          "Update php-http/client-common at least to 2.0.0",
          "Update php-http/curl-client at least to 2.0.0",
          "Update php-http/discovery at least to 1.7.0",
          "Update php-http/httplug at least to 2.0.0",
          "Update php-http/message at least to 1.8.0",
          "Update php-http/message-factory at least to 1.0.2",
          "Update php-http/promise at least to 1.0.0",
          "Update phpdocumentor/reflection-common at least to 2.0.0",
          "Update phpdocumentor/reflection-docblock at least to 4.3.2",
          "Update phpdocumentor/type-resolver at least to 1.0.1",
          "Update phpseclib/phpseclib at least to 2.0.23",
          "Update phpspec/prophecy at least to 1.8.1",
          "Update phpunit/php-code-coverage at least to 7.0.0",
          "Update phpunit/php-file-iterator at least to 2.0.2",
          "Update phpunit/php-text-template at least to 1.2.1",
          "Update phpunit/php-timer at least to 2.1.2",
          "Update phpunit/php-token-stream at least to 3.1.1",
          "Update phpunit/phpunit at least to 8.0",
          "Update ql/uri-template at least to 1.1.3",
          "Update ralouphie/getallheaders at least to 3.0.3",
          "Update ramsey/uuid at least to 3.8.0",
          "Update riverline/multipart-parser at least to 2.0.5",
          "Update rize/uri-template at least to 0.3.2",
          "Warning (minor severity): rize/uri-template does not have version that is fully compatible with PHP 7.3 (latest known 0.3.2)",
          "Update sebastian/code-unit-reverse-lookup at least to 1.0.1",
          "Update sebastian/comparator at least to 3.0.2",
          "Update sebastian/diff at least to 3.0.2",
          "Update sebastian/environment at least to 4.2.2",
          "Update sebastian/exporter at least to 3.1.2",
          "Update sebastian/global-state at least to 3.0.0",
          "Update sebastian/object-enumerator at least to 3.0.3",
          "Update sebastian/object-reflector at least to 1.1.1",
          "Update sebastian/recursion-context at least to 3.0.0",
          "Update sebastian/resource-operations at least to 2.0.1",
          "Update sebastian/type at least to 1.0.0",
          "Update sebastian/version at least to 2.0.1",
          "Update sensio/distribution-bundle at least to 5.0.25",
          "Update sensio/generator-bundle at least to 3.1.7",
          "Update sensio/framework-extra-bundle at least to 5.4.1",
          "Update sensiolabs/security-checker at least to 6.0.2",
          "Update sentry/sdk at least to 2.0.4",
          "Update sentry/sentry at least to 2.1.3",
          "Update sentry/sentry-symfony at least to 3.1.0",
          "Update skyeng/php-lemmatizer at least to 1.0.3",
          "Unknown package some_vendor/some_package version 1.2.3",
          "Update suncat/mobile-detect-bundle at least to 1.1.1",
          "Update superbalist/flysystem-google-storage at least to 7.2.1",
          "Update swiftmailer/swiftmailer at least to 6.2.1",
          "Update symfony/assetic-bundle at least to 2.8.2",
          "Update symfony/http-client at least to 4.3.4",
          "Update symfony/http-client-contracts at least to 1.1.6",
          "Update symfony/mime at least to 4.3.4",
          "Update symfony/monolog-bundle at least to 3.1.2",
          "Update symfony/phpunit-bridge at least to 3.4.31",
          "Update symfony/polyfill-apcu at least to 1.12.0",
          "Update symfony/polyfill-ctype at least to 1.12.0",
          "Update symfony/polyfill-iconv at least to 1.12.0",
          "Update symfony/polyfill-intl-icu at least to 1.12.0",
          "Update symfony/polyfill-intl-idn at least to 1.12.0",
          "Update symfony/polyfill-mbstring at least to 1.12.0",
          "Update symfony/polyfill-util at least to 1.12.0",
          "Update symfony/swiftmailer-bundle at least to 3.2.8",
          "Warning (minor severity): symfony/swiftmailer-bundle does not have version that is fully compatible with PHP 7.3 (latest known 3.2.8)",
          "Update symfony/symfony at least to 3.4.31",
          "Update theseer/tokenizer at least to 1.1.3",
          "Update twig/twig at least to 2.11.3",
          "Update webmozart/assert at least to 1.5.0",
          "Update welp/mailchimp-bundle at least to 1.2.3",
          "Update willdurand/jsonp-callback-validator at least to 1.1.0",
          "Update willdurand/negotiation at least to 2.3.1",
          "Update zendframework/zend-code at least to 3.3.2",
          "Update zendframework/zend-diactoros at least to 2.1.3",
          "Update zendframework/zend-eventmanager at least to 3.2.1",
          "\n",
          "Processed 2 files, found 2 files with potential problems",
          "src/test.php",
          "================================================================================",
          "Check that Heredoc/Nowdoc string does not contain closing identifier inside in the beginning of line",
          "\t16\t    $string = <<<MYSTR",
          "\t17\t        MYSTR - error!",
          "\t18\tMYSTR;",
          "\t19\t    preg_replace('/123/', '11', '1234567');",
          "\t20\t    switch ($a) {",
          "\t21\t        case 123:",
          "\t22\t            echo 123;",
          "--------------------------------------------------------------------------------",
          "Check that pattern corresponds PCRE2 syntax",
          "\t16\t    $string = <<<MYSTR",
          "\t17\t        MYSTR - error!",
          "\t18\tMYSTR;",
          "\t19\t    preg_replace('/123/', '11', '1234567');",
          "\t20\t    switch ($a) {",
          "--------------------------------------------------------------------------------",
          "Check that continue is not inside switch, otherwise change to break or continue 2",
          "\t17\t        MYSTR - error!",
          "\t18\tMYSTR;",
          "\t19\t    preg_replace('/123/', '11', '1234567');",
          "\t20\t    switch ($a) {",
          "\t21\t        case 123:",
          "\t22\t            echo 123;",
          "\t23\t            continue;",
          "--------------------------------------------------------------------------------",
          "Check that JsonException is not in the global namespace (now global JsonException is a part of PHP)",
          "\t29\t    }",
          "\t30\t    $result = date_parse_from_format('dd.mm.yyyy hh:nn:ssTZ');",
          "\t31\t    echo $result['zone'];",
          "\t32\t    throw new JsonException();",
          "--------------------------------------------------------------------------------",
          "Check that JSON_THROW_ON_ERROR is not in the global namespace (now global JSON_THROW_ON_ERROR is a part of PHP)",
          "\t30\t    $result = date_parse_from_format('dd.mm.yyyy hh:nn:ssTZ');",
          "\t31\t    echo $result['zone'];",
          "\t32\t    throw new JsonException();",
          "\t33\t    const JSON_THROW_ON_ERROR = 35;",
          "--------------------------------------------------------------------------------",
          "Check that this is not static field assignment by reference (now they cannot be separated by assignment by reference)",
          "\t38\t    MyClass::$value = &$myVal;",
          "\t39\t    $myVal = 1;",
          "\t40\t    $size = getimagesize('my_image.bmp');",
          "\t41\t    return $size['mime'] === 'image/x-ms-bmp';",
          "--------------------------------------------------------------------------------",
          "Check that value with key \"mime\" of getimagesize result is not compared to image/x-ms-bmp",
          "\t40\t    $size = getimagesize('my_image.bmp');",
          "\t41\t    return $size['mime'] === 'image/x-ms-bmp';",
          "\t42\t    mb_ereg('(?<word>\\w+)', '国', $matches);",
          "\t43\t    strpos($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check usage of mb_ereg_-prefixed functions, now named captures are returned both using their group number and their name",
          "\t42\t    mb_ereg('(?<word>\\w+)', '国', $matches);",
          "\t43\t    strpos($a, $b, $c);",
          "\t44\t    strrpos($a, $b, $c);",
          "\t45\t    stripos($a, $b, $c);",
          "\t46\t    strripos($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t40\t    $size = getimagesize('my_image.bmp');",
          "\t41\t    return $size['mime'] === 'image/x-ms-bmp';",
          "\t42\t    mb_ereg('(?<word>\\w+)', '国', $matches);",
          "\t43\t    strpos($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t41\t    return $size['mime'] === 'image/x-ms-bmp';",
          "\t42\t    mb_ereg('(?<word>\\w+)', '国', $matches);",
          "\t43\t    strpos($a, $b, $c);",
          "\t44\t    strrpos($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t42\t    mb_ereg('(?<word>\\w+)', '国', $matches);",
          "\t43\t    strpos($a, $b, $c);",
          "\t44\t    strrpos($a, $b, $c);",
          "\t45\t    stripos($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t43\t    strpos($a, $b, $c);",
          "\t44\t    strrpos($a, $b, $c);",
          "\t45\t    stripos($a, $b, $c);",
          "\t46\t    strripos($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t44\t    strrpos($a, $b, $c);",
          "\t45\t    stripos($a, $b, $c);",
          "\t46\t    strripos($a, $b, $c);",
          "\t47\t    strstr($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t45\t    stripos($a, $b, $c);",
          "\t46\t    strripos($a, $b, $c);",
          "\t47\t    strstr($a, $b, $c);",
          "\t48\t    strchr($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t46\t    strripos($a, $b, $c);",
          "\t47\t    strstr($a, $b, $c);",
          "\t48\t    strchr($a, $b, $c);",
          "\t49\t    strrchr($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t47\t    strstr($a, $b, $c);",
          "\t48\t    strchr($a, $b, $c);",
          "\t49\t    strrchr($a, $b, $c);",
          "\t50\t    stristr($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Replace image2wbmp() with imagewbmp()",
          "\t37\t    return image2wbmp('my_image.bmp');",
          "--------------------------------------------------------------------------------",
          "Use FILTER_VALIDATE_URL without FILTER_FLAG_SCHEME_REQUIRED",
          "\t57\t    filter_var ($t, FILTER_FLAG_SCHEME_REQUIRED, FILTER_FLAG_HOST_REQUIRED);",
          "--------------------------------------------------------------------------------",
          "Use FILTER_VALIDATE_URL without FILTER_FLAG_HOST_REQUIRED",
          "\t57\t    filter_var ($t, FILTER_FLAG_SCHEME_REQUIRED, FILTER_FLAG_HOST_REQUIRED);",
          "--------------------------------------------------------------------------------",
          "Check whether case insensitive const is defined. If so, replace with usual const declaration and check all usages",
          "\t58\t    define('GREETING', 'Hello you.', true);",
          "--------------------------------------------------------------------------------",
          "Check whether assert is declared inside namespace, now it is forbidden, change function name",
          "\t59\t    public static function assert (string $eval) {",
          "--------------------------------------------------------------------------------",
          "Replace fgetss with fgets and manual tag removal",
          "\t62\t    fgetss('AAA<b>BBB</b>');",
          "--------------------------------------------------------------------------------",
          "Replace gzgetss with gzgets and manual tag removal",
          "\t63\t    gzgetss('AAA<b>BBB</b>');",
          "--------------------------------------------------------------------------------",
          "Replace stream filter string.strip_tags with manual tag removal",
          "\t64\t    stream_filter_append($fp, 'string.strip_tags');",
          "--------------------------------------------------------------------------------",
          "Replace mbregex_encoding with mb_regex_encoding",
          "\t65\t    mbregex_encoding($a, $b, $c)",
          "--------------------------------------------------------------------------------",
          "Replace mbsplit with mb_split",
          "\t67\t    mbsplit($a, $b, $c)",
          "--------------------------------------------------------------------------------",
          "Replace mbereg-prefixed function with corresponding mb_ereg_-prefixed function",
          "\t66\t    mbereg($a, $b, $c)",
          "\n",
          "vendor/some_vendor/some_package/test.php",
          "================================================================================",
          "Check that Heredoc/Nowdoc string does not contain closing identifier inside in the beginning of line",
          "\t16\t    $string = <<<MYSTR",
          "\t17\t        MYSTR - error!",
          "\t18\tMYSTR;",
          "\t19\t    preg_replace('/123/', '11', '1234567');",
          "\t20\t    switch ($a) {",
          "\t21\t        case 123:",
          "\t22\t            echo 123;",
          "--------------------------------------------------------------------------------",
          "Check that pattern corresponds PCRE2 syntax",
          "\t16\t    $string = <<<MYSTR",
          "\t17\t        MYSTR - error!",
          "\t18\tMYSTR;",
          "\t19\t    preg_replace('/123/', '11', '1234567');",
          "\t20\t    switch ($a) {",
          "--------------------------------------------------------------------------------",
          "Check that continue is not inside switch, otherwise change to break or continue 2",
          "\t17\t        MYSTR - error!",
          "\t18\tMYSTR;",
          "\t19\t    preg_replace('/123/', '11', '1234567');",
          "\t20\t    switch ($a) {",
          "\t21\t        case 123:",
          "\t22\t            echo 123;",
          "\t23\t            continue;",
          "--------------------------------------------------------------------------------",
          "Check that JsonException is not in the global namespace (now global JsonException is a part of PHP)",
          "\t29\t    }",
          "\t30\t    $result = date_parse_from_format('dd.mm.yyyy hh:nn:ssTZ');",
          "\t31\t    echo $result['zone'];",
          "\t32\t    throw new JsonException();",
          "--------------------------------------------------------------------------------",
          "Check that JSON_THROW_ON_ERROR is not in the global namespace (now global JSON_THROW_ON_ERROR is a part of PHP)",
          "\t30\t    $result = date_parse_from_format('dd.mm.yyyy hh:nn:ssTZ');",
          "\t31\t    echo $result['zone'];",
          "\t32\t    throw new JsonException();",
          "\t33\t    const JSON_THROW_ON_ERROR = 35;",
          "--------------------------------------------------------------------------------",
          "Check that this is not static field assignment by reference (now they cannot be separated by assignment by reference)",
          "\t38\t    MyClass::$value = &$myVal;",
          "\t39\t    $myVal = 1;",
          "\t40\t    $size = getimagesize('my_image.bmp');",
          "\t41\t    return $size['mime'] === 'image/x-ms-bmp';",
          "--------------------------------------------------------------------------------",
          "Check that value with key \"mime\" of getimagesize result is not compared to image/x-ms-bmp",
          "\t40\t    $size = getimagesize('my_image.bmp');",
          "\t41\t    return $size['mime'] === 'image/x-ms-bmp';",
          "\t42\t    mb_ereg('(?<word>\\w+)', '国', $matches);",
          "\t43\t    strpos($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check usage of mb_ereg_-prefixed functions, now named captures are returned both using their group number and their name",
          "\t42\t    mb_ereg('(?<word>\\w+)', '国', $matches);",
          "\t43\t    strpos($a, $b, $c);",
          "\t44\t    strrpos($a, $b, $c);",
          "\t45\t    stripos($a, $b, $c);",
          "\t46\t    strripos($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t40\t    $size = getimagesize('my_image.bmp');",
          "\t41\t    return $size['mime'] === 'image/x-ms-bmp';",
          "\t42\t    mb_ereg('(?<word>\\w+)', '国', $matches);",
          "\t43\t    strpos($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t41\t    return $size['mime'] === 'image/x-ms-bmp';",
          "\t42\t    mb_ereg('(?<word>\\w+)', '国', $matches);",
          "\t43\t    strpos($a, $b, $c);",
          "\t44\t    strrpos($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t42\t    mb_ereg('(?<word>\\w+)', '国', $matches);",
          "\t43\t    strpos($a, $b, $c);",
          "\t44\t    strrpos($a, $b, $c);",
          "\t45\t    stripos($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t43\t    strpos($a, $b, $c);",
          "\t44\t    strrpos($a, $b, $c);",
          "\t45\t    stripos($a, $b, $c);",
          "\t46\t    strripos($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t44\t    strrpos($a, $b, $c);",
          "\t45\t    stripos($a, $b, $c);",
          "\t46\t    strripos($a, $b, $c);",
          "\t47\t    strstr($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t45\t    stripos($a, $b, $c);",
          "\t46\t    strripos($a, $b, $c);",
          "\t47\t    strstr($a, $b, $c);",
          "\t48\t    strchr($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t46\t    strripos($a, $b, $c);",
          "\t47\t    strstr($a, $b, $c);",
          "\t48\t    strchr($a, $b, $c);",
          "\t49\t    strrchr($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t47\t    strstr($a, $b, $c);",
          "\t48\t    strchr($a, $b, $c);",
          "\t49\t    strrchr($a, $b, $c);",
          "\t50\t    stristr($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Replace image2wbmp() with imagewbmp()",
          "\t37\t    return image2wbmp('my_image.bmp');",
          "--------------------------------------------------------------------------------",
          "Use FILTER_VALIDATE_URL without FILTER_FLAG_SCHEME_REQUIRED",
          "\t57\t    filter_var ($t, FILTER_FLAG_SCHEME_REQUIRED, FILTER_FLAG_HOST_REQUIRED);",
          "--------------------------------------------------------------------------------",
          "Use FILTER_VALIDATE_URL without FILTER_FLAG_HOST_REQUIRED",
          "\t57\t    filter_var ($t, FILTER_FLAG_SCHEME_REQUIRED, FILTER_FLAG_HOST_REQUIRED);",
          "--------------------------------------------------------------------------------",
          "Check whether case insensitive const is defined. If so, replace with usual const declaration and check all usages",
          "\t58\t    define('GREETING', 'Hello you.', true);",
          "--------------------------------------------------------------------------------",
          "Check whether assert is declared inside namespace, now it is forbidden, change function name",
          "\t59\t    public static function assert (string $eval) {",
          "--------------------------------------------------------------------------------",
          "Replace fgetss with fgets and manual tag removal",
          "\t62\t    fgetss('AAA<b>BBB</b>');",
          "--------------------------------------------------------------------------------",
          "Replace gzgetss with gzgets and manual tag removal",
          "\t63\t    gzgetss('AAA<b>BBB</b>');",
          "--------------------------------------------------------------------------------",
          "Replace stream filter string.strip_tags with manual tag removal",
          "\t64\t    stream_filter_append($fp, 'string.strip_tags');",
          "--------------------------------------------------------------------------------",
          "Replace mbregex_encoding with mb_regex_encoding",
          "\t65\t    mbregex_encoding($a, $b, $c)",
          "--------------------------------------------------------------------------------",
          "Replace mbsplit with mb_split",
          "\t67\t    mbsplit($a, $b, $c)",
          "--------------------------------------------------------------------------------",
          "Replace mbereg-prefixed function with corresponding mb_ereg_-prefixed function",
          "\t66\t    mbereg($a, $b, $c)"
        ]
      }
    ]
  },
  {
    "options": {"--no-vendor": true},
    "_children": [
      {
        "_name": "7.1 to 7.2 no vendor",
        "version_from": "7.1",
        "version_to": "7.2",
        "expected_result": [
          "Package compatibility report:",
          "Update aws/aws-sdk-php at least to 3.112.5",
          "Update aws/aws-sdk-php-symfony at least to 1.3.0",
          "Update cloudconvert/cloudconvert-php at least to 2.2.1",
          "Update cloudinary/cloudinary_php at least to 1.14.0",
          "Update clue/stream-filter at least to 1.4.1",
          "Update composer/semver at least to 1.5.0",
          "Update composer/xdebug-handler at least to 1.3.3",
          "Update doctrine/annotations at least to 1.7.0",
          "Update doctrine/cache at least to 1.8.0",
          "Update doctrine/collections at least to 1.6.2",
          "Update doctrine/common at least to 2.11.0",
          "Update doctrine/data-fixtures at least to 1.3.2",
          "Update doctrine/dbal at least to 2.9.2",
          "Update doctrine/doctrine-bundle at least to 1.11.2",
          "Update doctrine/doctrine-cache-bundle at least to 1.3.5",
          "Update doctrine/doctrine-fixtures-bundle at least to 3.2.2",
          "Update doctrine/doctrine-migrations-bundle at least to 1.3.2",
          "Update doctrine/event-manager at least to 1.0.0",
          "Update doctrine/inflector at least to 1.3.0",
          "Update doctrine/instantiator at least to 1.2.0",
          "Update doctrine/lexer at least to 1.1.0",
          "Update doctrine/migrations at least to 1.8.1",
          "Update doctrine/orm at least to 2.6.3",
          "Update doctrine/persistence at least to 1.1.1",
          "Update doctrine/reflection at least to 1.0.0",
          "Update drewm/mailchimp-api at least to 2.5.4",
          "Update egulias/email-validator at least to 2.1.11",
          "Update fig/http-message-util at least to 1.1.3",
          "Update fig/link-util at least to 1.0.0",
          "Update firebase/php-jwt at least to 5.0.0",
          "Update fresh/doctrine-enum-bundle at least to 5.3.0",
          "Update friendsofphp/php-cs-fixer at least to 2.15.3",
          "Update friendsofsymfony/oauth-server-bundle at least to 2.0.0",
          "Update friendsofsymfony/oauth2-php at least to 1.2.3",
          "Update friendsofsymfony/rest-bundle at least to 2.5.0",
          "Warning (minor severity): friendsofsymfony/rest-bundle does not have version that is fully compatible with PHP 7.2 (latest known 2.5.0)",
          "Update giggsey/libphonenumber-for-php at least to 8.10.19",
          "Update giggsey/locale at least to 1.7.1",
          "Update google/apiclient at least to 2.4.0",
          "Update google/apiclient-services at least to 0.115",
          "Update google/auth at least to 1.5.2",
          "Update google/cloud-core at least to 1.33.0",
          "Update google/cloud-storage at least to 1.14.0",
          "Update google/crc32 at least to 0.1.0",
          "Update guzzlehttp/guzzle at least to 6.3.3",
          "Update guzzlehttp/promises at least to 1.3.1",
          "Update guzzlehttp/psr7 at least to 1.6.1",
          "Update helpscout/api at least to 2.4.0",
          "Update hoa/compiler at least to 3.17.08.08",
          "Warning (minor severity): hoa/compiler does not have version that is fully compatible with PHP 7.2 (latest known 3.17.08.08)",
          "Update hoa/consistency at least to 1.17.05.02",
          "Update hoa/event at least to 1.17.01.13",
          "Update hoa/exception at least to 1.17.01.16",
          "Update hoa/file at least to 1.17.07.11",
          "Update hoa/iterator at least to 2.17.01.10",
          "Update hoa/math at least to 1.17.05.16",
          "Update hoa/protocol at least to 1.17.01.14",
          "Update hoa/regex at least to 1.17.01.13",
          "Update hoa/stream at least to 1.17.02.21",
          "Update hoa/ustring at least to 4.17.01.16",
          "Update hoa/visitor at least to 2.17.01.16",
          "Update hoa/zformat at least to 1.17.01.10",
          "Update http-interop/http-factory-guzzle at least to 1.0.0",
          "Update incenteev/composer-parameter-handler at least to 2.1.3",
          "Update jdorn/sql-formatter at least to 1.2.17",
          "Update jean85/pretty-package-versions at least to 1.2",
          "Update jms/metadata at least to 2.1.0",
          "Update jms/serializer at least to 3.3.0",
          "Update jms/serializer-bundle at least to 3.4.1",
          "Update kreait/clock at least to 1.0.1",
          "Update kreait/firebase-php at least to 4.32.0",
          "Update kreait/firebase-tokens at least to 1.9.1",
          "Update kreait/gcp-metadata at least to 1.0.1",
          "Update kriswallsmith/assetic at least to 1.4.0",
          "Update ktamas77/firebase-php at least to 2.2.2",
          "Update lcobucci/jwt at least to 3.3.1",
          "Update league/flysystem at least to 1.0.55",
          "Update lexik/jwt-authentication-bundle at least to 2.6.4",
          "Update michelf/php-markdown at least to 1.8.0",
          "Update mobiledetect/mobiledetectlib at least to 2.8.34",
          "Update monolog/monolog at least to 1.25.1",
          "Update mtdowling/jmespath.php at least to 2.4.0",
          "Update myclabs/deep-copy at least to 1.9.3",
          "Update myclabs/php-enum at least to 1.7.2",
          "Update namshi/jose at least to 7.2.3",
          "Update nelmio/cors-bundle at least to 1.5.6",
          "Warning (minor severity): nelmio/cors-bundle does not have version that is fully compatible with PHP 7.2 (latest known 1.5.6)",
          "Update nelmio/api-doc-bundle at least to 2.13.4",
          "Update noxlogic/ratelimit-bundle at least to 1.14.0",
          "Warning (minor severity): noxlogic/ratelimit-bundle does not have version that is fully compatible with PHP 7.2 (latest known 1.14.0)",
          "Update ocramius/package-versions at least to 1.5.1",
          "Update ocramius/proxy-manager at least to 2.2.0",
          "Update opis/json-schema at least to 1.0.18",
          "Update phar-io/manifest at least to 1.0.3",
          "Update phar-io/version at least to 2.0.1",
          "Update php-amqplib/php-amqplib at least to 2.8.0",
          "Update php-amqplib/rabbitmq-bundle at least to 1.14.4",
          "Warning (minor severity): php-amqplib/rabbitmq-bundle does not have version that is fully compatible with PHP 7.2 (latest known 1.14.4)",
          "Update php-cs-fixer/diff at least to 1.3.0",
          "Update php-http/client-common at least to 2.0.0",
          "Update php-http/curl-client at least to 2.0.0",
          "Update php-http/discovery at least to 1.7.0",
          "Update php-http/httplug at least to 2.0.0",
          "Update php-http/message at least to 1.8.0",
          "Update php-http/message-factory at least to 1.0.2",
          "Update php-http/promise at least to 1.0.0",
          "Update phpdocumentor/reflection-common at least to 2.0.0",
          "Update phpdocumentor/reflection-docblock at least to 4.3.2",
          "Update phpdocumentor/type-resolver at least to 1.0.1",
          "Update phpseclib/phpseclib at least to 2.0.23",
          "Update phpspec/prophecy at least to 1.8.1",
          "Update phpunit/php-code-coverage at least to 7.0.0",
          "Update phpunit/php-file-iterator at least to 2.0.2",
          "Update phpunit/php-text-template at least to 1.2.1",
          "Update phpunit/php-timer at least to 2.1.2",
          "Update phpunit/php-token-stream at least to 3.1.1",
          "Update phpunit/phpunit at least to 8.0",
          "Update ql/uri-template at least to 1.1.3",
          "Update ralouphie/getallheaders at least to 3.0.3",
          "Update ramsey/uuid at least to 3.8.0",
          "Update riverline/multipart-parser at least to 2.0.5",
          "Update rize/uri-template at least to 0.3.2",
          "Warning (minor severity): rize/uri-template does not have version that is fully compatible with PHP 7.2 (latest known 0.3.2)",
          "Update sebastian/code-unit-reverse-lookup at least to 1.0.1",
          "Update sebastian/comparator at least to 3.0.2",
          "Update sebastian/diff at least to 3.0.2",
          "Update sebastian/environment at least to 4.2.2",
          "Update sebastian/exporter at least to 3.1.2",
          "Update sebastian/global-state at least to 3.0.0",
          "Update sebastian/object-enumerator at least to 3.0.3",
          "Update sebastian/object-reflector at least to 1.1.1",
          "Update sebastian/recursion-context at least to 3.0.0",
          "Update sebastian/resource-operations at least to 2.0.1",
          "Update sebastian/type at least to 1.0.0",
          "Update sebastian/version at least to 2.0.1",
          "Update sensio/distribution-bundle at least to 5.0.25",
          "Update sensio/generator-bundle at least to 3.1.7",
          "Update sensio/framework-extra-bundle at least to 5.4.1",
          "Update sensiolabs/security-checker at least to 6.0.2",
          "Update sentry/sdk at least to 2.0.4",
          "Update sentry/sentry at least to 2.1.3",
          "Update sentry/sentry-symfony at least to 3.1.0",
          "Update skyeng/php-lemmatizer at least to 1.0.3",
          "Unknown package some_vendor/some_package version 1.2.3",
          "Update suncat/mobile-detect-bundle at least to 1.1.1",
          "Update superbalist/flysystem-google-storage at least to 7.2.1",
          "Update swiftmailer/swiftmailer at least to 6.2.1",
          "Update symfony/assetic-bundle at least to 2.8.2",
          "Update symfony/http-client at least to 4.3.4",
          "Update symfony/http-client-contracts at least to 1.1.6",
          "Update symfony/mime at least to 4.3.4",
          "Update symfony/monolog-bundle at least to 3.1.2",
          "Update symfony/phpunit-bridge at least to 3.4.31",
          "Update symfony/polyfill-apcu at least to 1.12.0",
          "Update symfony/polyfill-ctype at least to 1.12.0",
          "Update symfony/polyfill-iconv at least to 1.12.0",
          "Update symfony/polyfill-intl-icu at least to 1.12.0",
          "Update symfony/polyfill-intl-idn at least to 1.12.0",
          "Update symfony/polyfill-mbstring at least to 1.12.0",
          "Update symfony/polyfill-util at least to 1.12.0",
          "Update symfony/swiftmailer-bundle at least to 3.2.8",
          "Warning (minor severity): symfony/swiftmailer-bundle does not have version that is fully compatible with PHP 7.2 (latest known 3.2.8)",
          "Update symfony/symfony at least to 3.4.31",
          "Update theseer/tokenizer at least to 1.1.3",
          "Update twig/twig at least to 2.11.3",
          "Update webmozart/assert at least to 1.5.0",
          "Update welp/mailchimp-bundle at least to 1.2.3",
          "Update willdurand/jsonp-callback-validator at least to 1.1.0",
          "Update willdurand/negotiation at least to 2.3.1",
          "Update zendframework/zend-code at least to 3.3.2",
          "Update zendframework/zend-diactoros at least to 2.1.3",
          "Update zendframework/zend-eventmanager at least to 3.2.1",
          "\n",
          "Processed 1 file, found 1 file with potential problems",
          "src/test.php",
          "================================================================================",
          "Check that parameter of get_class() cannot be null",
          "\t1\t    $myObj = getMyObj();",
          "\t2\t    $a = get_class($myObj);",
          "--------------------------------------------------------------------------------",
          "Check that parameter of count() is always countable",
          "\t1\t    $myObj = getMyObj();",
          "\t2\t    $a = get_class($myObj);",
          "\t3\t    $arr = '123';",
          "\t4\t    echo count($arr);",
          "--------------------------------------------------------------------------------",
          "Check that result of array_unique with sort_flags = SORT_STRING does not use keys for non-associative arrays (it may be reindexed)",
          "\t5\t    return array_unique ([1, 2, 2, 3])[0];",
          "\t6\t    is_object ($myObj);",
          "\t7\t    if (number_format(-0.01, 0) === '-0') {",
          "\t8\t        return 123;",
          "\t9\t    }",
          "--------------------------------------------------------------------------------",
          "Check that parameter of is_object() cannot be __PHP_Incomplete_Class (now it returns TRUE instead of FALSE)",
          "\t2\t    $a = get_class($myObj);",
          "\t3\t    $arr = '123';",
          "\t4\t    echo count($arr);",
          "\t5\t    return array_unique ([1, 2, 2, 3])[0];",
          "\t6\t    is_object ($myObj);",
          "--------------------------------------------------------------------------------",
          "Check that result of number_format is not compared with \"-0\"",
          "\t7\t    if (number_format(-0.01, 0) === '-0') {",
          "\t8\t        return 123;",
          "\t9\t    }",
          "--------------------------------------------------------------------------------",
          "Check that result of gettype is not compared with \"unknown type\" (for closed resources now it returns \"resource (closed)\")",
          "\t12\t    return (gettype($resource) === 'unknown_type') ? true : false;",
          "\t13\t    bcmod('4', '3.5');",
          "\t14\t    hash_hmac_file('crc32', 'my_data');",
          "--------------------------------------------------------------------------------",
          "Check that bcmod result is not compared to int (now result is not rounded)",
          "\t13\t    bcmod('4', '3.5');",
          "\t14\t    hash_hmac_file('crc32', 'my_data');",
          "\t15\t    return mt_rand (12432523);",
          "--------------------------------------------------------------------------------",
          "Check that hash_hmac, hash_hmac_file, hash_pbkdf2 function do not use one of the following algorithms adler32, crc32, crc32b, fnv132, fnv1a32, fnv164, fnv1a64, joaat",
          "\t12\t    return (gettype($resource) === 'unknown_type') ? true : false;",
          "\t13\t    bcmod('4', '3.5');",
          "\t14\t    hash_hmac_file('crc32', 'my_data');",
          "--------------------------------------------------------------------------------",
          "Check that hash_hmac, hash_hmac_file, hash_pbkdf2 function do not use one of the following algorithms adler32, crc32, crc32b, fnv132, fnv1a32, fnv164, fnv1a64, joaat",
          "\t150\t      }",
          "\t151\t    }",
          "\t152\t    hash_hmac      ('crc32', 'my_data');",
          "--------------------------------------------------------------------------------",
          "Check that hash_hmac, hash_hmac_file, hash_pbkdf2 function do not use one of the following algorithms adler32, crc32, crc32b, fnv132, fnv1a32, fnv164, fnv1a64, joaat",
          "\t151\t    }",
          "\t152\t    hash_hmac      ('crc32', 'my_data');",
          "\t153\t    hash_pbkdf2      ('crc32', 'my_data');",
          "--------------------------------------------------------------------------------",
          "Check that hash_init with HASH_HMAC parameter does not use one of the following algorithms adler32, crc32, crc32b, fnv132, fnv1a32, fnv164, fnv1a64, joaat",
          "\t152\t    hash_hmac      ('crc32', 'my_data');",
          "\t153\t    hash_pbkdf2      ('crc32', 'my_data');",
          "\t154\t    hash_init       ('crc32',        HASH_HMAC);",
          "--------------------------------------------------------------------------------",
          "If rand or mt_rand is called with fixed seed, resulting sequence after migration may differ from current",
          "\t13\t    bcmod('4', '3.5');",
          "\t14\t    hash_hmac_file('crc32', 'my_data');",
          "\t15\t    return mt_rand (12432523);",
          "\t16\t    $string = <<<MYSTR",
          "\t17\t        MYSTR - error!",
          "--------------------------------------------------------------------------------",
          "Check, that value for key \"zone\" in the result of date_parse_from_format is not used (now it contains seconds with inverted sign instead of minutes)",
          "\t30\t    $result = date_parse_from_format('dd.mm.yyyy hh:nn:ssTZ');",
          "\t31\t    echo $result['zone'];",
          "\t32\t    throw new JsonException();",
          "\t33\t    const JSON_THROW_ON_ERROR = 35;",
          "\t34\t    __autoload('vendor/autoload.php');",
          "--------------------------------------------------------------------------------",
          "Replace __autoload() with spl_autoload_register()",
          "\t34\t    __autoload('vendor/autoload.php');",
          "--------------------------------------------------------------------------------",
          "Replace png2wbmp() with imagecreatefrompng() and imagewbmp()",
          "\t35\t    return png2wbmp('my_image.png');",
          "--------------------------------------------------------------------------------",
          "Replace jpeg2wbmp() with imagecreatefromjpeg() and imagewbmp()",
          "\t36\t    return jpeg2wbmp('my_image.jpg');",
          "--------------------------------------------------------------------------------",
          "Replace (unset) cast with call of unset or just NULL",
          "\t51\t    (unset)$myvar;",
          "--------------------------------------------------------------------------------",
          "Check whether parse_str is called with second parameter, now it is necessary",
          "\t52\t    parse_str($a);",
          "--------------------------------------------------------------------------------",
          "Replace gmp_random() with gmp_random_bits() or gmp_random_range()",
          "\t53\t    gmp_random(1, 3);",
          "--------------------------------------------------------------------------------",
          "Replace each() with foreach()",
          "\t54\t    each($arr as $key => $value) {",
          "--------------------------------------------------------------------------------",
          "Check whether assert() is called with string argument. If so, replace with direct call and fix zend.assertions in ini-file",
          "\t52\t    parse_str($a);",
          "\t53\t    gmp_random(1, 3);",
          "\t54\t    each($arr as $key => $value) {",
          "\t55\t        assert('$i = 3');",
          "--------------------------------------------------------------------------------",
          "Check whether assert() is called with string argument. If so, replace with direct call and fix zend.assertions in ini-file",
          "\t56\t    }",
          "\t57\t    filter_var ($t, FILTER_FLAG_SCHEME_REQUIRED, FILTER_FLAG_HOST_REQUIRED);",
          "\t58\t    define('GREETING', 'Hello you.', true);",
          "\t59\t    public static function assert (string $eval) {",
          "--------------------------------------------------------------------------------",
          "Replace $php_errormsg with error_get_last()",
          "\t68\t    var_dump($php_errormsg);",
          "--------------------------------------------------------------------------------",
          "Replace create_function with anonymous function declaration",
          "\t69\t    $myfunc = create_function  ();",
          "--------------------------------------------------------------------------------",
          "Remove usage of $errcontext, use debugger instead",
          "\t70\t    print_r($errcontext);",
          "--------------------------------------------------------------------------------",
          "Replace read_exif_data with exif_read_data",
          "\t73\t    read_exif_data();",
          "--------------------------------------------------------------------------------",
          "Replace INTL_IDNA_VARIANT_2003 with INTL_IDNA_VARIANT_UTS46",
          "\t72\t    echo INTL_IDNA_VARIANT_2003;",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to setUp or setUpBeforeClass",
          "\t105\t    public function          setUp     (        )",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to setUp or setUpBeforeClass",
          "\t108\t    public function    setUpBeforeClass(        )",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to tearDown or tearDownBeforeClass",
          "\t111\t    public function     tearDown(   )                        void",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to tearDown or tearDownBeforeClass",
          "\t114\t    public function tearDownAfterClass(   )",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to assertPreConditions or assertPostConditions",
          "\t117\t    public function assertPreConditions()    id",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to assertPreConditions or assertPostConditions",
          "\t120\t    public function assertPostConditions()",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to onNotSuccessfulTest",
          "\t123\t    public function onNotSuccessfulTest(   )",
          "--------------------------------------------------------------------------------",
          "Replace assertInternalType and assertNotInternalType methods with more specific methods",
          "\t126\t    $this->assertInternalType($abc);",
          "--------------------------------------------------------------------------------",
          "Replace assertInternalType and assertNotInternalType methods with more specific methods",
          "\t127\t    static::assertNotInternalType($def);",
          "--------------------------------------------------------------------------------",
          "Remove assertArraySubset usage, refactor to manual check",
          "\t128\t    self::assertArraySubset(['a', 'b'], ['c', 'd']);",
          "--------------------------------------------------------------------------------",
          "Replace usage of optional arguments of assertEquals and assertNotEquals with more specific assertions",
          "\t129\t    $this->assertEquals($a, $b, 'message', 13);",
          "--------------------------------------------------------------------------------",
          "Replace usage of optional arguments of assertEquals and assertNotEquals with more specific assertions",
          "\t132\t    $this->assertNotEquals($h, $i, 'my message', 'bbb');",
          "--------------------------------------------------------------------------------",
          "Replace usage of assertAttribute-prefixed methods with manual processing",
          "\t135\t    $this->assertAttributeInt(345);",
          "--------------------------------------------------------------------------------",
          "Replace usage of attribute and attributeEqualTo methods with manual processing",
          "\t136\t    static::attribute(ddd);",
          "--------------------------------------------------------------------------------",
          "Replace usage of attribute and attributeEqualTo methods with manual processing",
          "\t137\t    self::attributeEqualTo        ( something);",
          "--------------------------------------------------------------------------------",
          "Replace usage of readAttribute method with manual processing",
          "\t138\t    $this->readAttribute    (   other);",
          "--------------------------------------------------------------------------------",
          "Replace usage of getStaticAttribute or getObjectAttribute methods with manual processing",
          "\t139\t    static::getStaticAttribute(my::attr);",
          "--------------------------------------------------------------------------------",
          "Replace usage of getStaticAttribute or getObjectAttribute methods with manual processing",
          "\t140\t    self::getObjectAttribute(my->attr);",
          "--------------------------------------------------------------------------------",
          "Check that assertContains or assertNotContains does not use string $haystack or additional parameters, otherwise use string-methods assertStringContainsString or assertStringNotContainsString",
          "\t141\t    $this->assertContains($a, [$b]);",
          "--------------------------------------------------------------------------------",
          "Check that assertContains or assertNotContains does not use string $haystack or additional parameters, otherwise use string-methods assertStringContainsString or assertStringNotContainsString",
          "\t142\t    static::assertNotContains    ($c, [$d]);",
          "--------------------------------------------------------------------------------",
          "Remove usage of TestListener",
          "\t143\t    class MyTestListener implements TestListener",
          "--------------------------------------------------------------------------------",
          "Remove usage of expectedException-prefixed annotations",
          "\t146\t       * @expectedExceptionCode 3"
        ]
      },
      {
        "_name": "7.1 to 7.3 no vendor",
        "version_from": "7.1",
        "version_to": "7.3",
        "expected_result": [
          "Package compatibility report:",
          "Update aws/aws-sdk-php at least to 3.112.5",
          "Update aws/aws-sdk-php-symfony at least to 1.3.0",
          "Update cloudconvert/cloudconvert-php at least to 2.2.1",
          "Update cloudinary/cloudinary_php at least to 1.14.0",
          "Update clue/stream-filter at least to 1.4.1",
          "Update composer/semver at least to 1.5.0",
          "Update composer/xdebug-handler at least to 1.3.3",
          "Update doctrine/annotations at least to 1.7.0",
          "Update doctrine/cache at least to 1.8.0",
          "Update doctrine/collections at least to 1.6.2",
          "Update doctrine/common at least to 2.11.0",
          "Update doctrine/data-fixtures at least to 1.3.2",
          "Update doctrine/dbal at least to 2.9.2",
          "Update doctrine/doctrine-bundle at least to 1.11.2",
          "Update doctrine/doctrine-cache-bundle at least to 1.3.5",
          "Update doctrine/doctrine-fixtures-bundle at least to 3.2.2",
          "Update doctrine/doctrine-migrations-bundle at least to 1.3.2",
          "Update doctrine/event-manager at least to 1.0.0",
          "Update doctrine/inflector at least to 1.3.0",
          "Update doctrine/instantiator at least to 1.2.0",
          "Update doctrine/lexer at least to 1.1.0",
          "Update doctrine/migrations at least to 1.8.1",
          "Update doctrine/orm at least to 2.6.3",
          "Update doctrine/persistence at least to 1.1.1",
          "Update doctrine/reflection at least to 1.0.0",
          "Update drewm/mailchimp-api at least to 2.5.4",
          "Update egulias/email-validator at least to 2.1.11",
          "Update fig/http-message-util at least to 1.1.3",
          "Update fig/link-util at least to 1.0.0",
          "Update firebase/php-jwt at least to 5.0.0",
          "Update fresh/doctrine-enum-bundle at least to 5.3.0",
          "Update friendsofphp/php-cs-fixer at least to 2.15.3",
          "Update friendsofsymfony/oauth-server-bundle at least to 2.0.0",
          "Update friendsofsymfony/oauth2-php at least to 1.2.3",
          "Update friendsofsymfony/rest-bundle at least to 2.5.0",
          "Warning (minor severity): friendsofsymfony/rest-bundle does not have version that is fully compatible with PHP 7.3 (latest known 2.5.0)",
          "Update giggsey/libphonenumber-for-php at least to 8.10.19",
          "Update giggsey/locale at least to 1.7.1",
          "Update google/apiclient at least to 2.4.0",
          "Update google/apiclient-services at least to 0.115",
          "Update google/auth at least to 1.5.2",
          "Update google/cloud-core at least to 1.33.0",
          "Update google/cloud-storage at least to 1.14.0",
          "Update google/crc32 at least to 0.1.0",
          "Update guzzlehttp/guzzle at least to 6.3.3",
          "Update guzzlehttp/promises at least to 1.3.1",
          "Update guzzlehttp/psr7 at least to 1.6.1",
          "Update helpscout/api at least to 2.4.0",
          "Update hoa/compiler at least to 3.17.08.08",
          "Warning (minor severity): hoa/compiler does not have version that is fully compatible with PHP 7.3 (latest known 3.17.08.08)",
          "Update hoa/consistency at least to 1.17.05.02",
          "Update hoa/event at least to 1.17.01.13",
          "Update hoa/exception at least to 1.17.01.16",
          "Update hoa/file at least to 1.17.07.11",
          "Update hoa/iterator at least to 2.17.01.10",
          "Update hoa/math at least to 1.17.05.16",
          "Update hoa/protocol at least to 1.17.01.14",
          "Update hoa/regex at least to 1.17.01.13",
          "Update hoa/stream at least to 1.17.02.21",
          "Update hoa/ustring at least to 4.17.01.16",
          "Update hoa/visitor at least to 2.17.01.16",
          "Update hoa/zformat at least to 1.17.01.10",
          "Update http-interop/http-factory-guzzle at least to 1.0.0",
          "Update incenteev/composer-parameter-handler at least to 2.1.3",
          "Update jdorn/sql-formatter at least to 1.2.17",
          "Update jean85/pretty-package-versions at least to 1.2",
          "Update jms/metadata at least to 2.1.0",
          "Update jms/serializer at least to 3.3.0",
          "Update jms/serializer-bundle at least to 3.4.1",
          "Update kreait/clock at least to 1.0.1",
          "Update kreait/firebase-php at least to 4.32.0",
          "Update kreait/firebase-tokens at least to 1.9.1",
          "Update kreait/gcp-metadata at least to 1.0.1",
          "Update kriswallsmith/assetic at least to 1.4.0",
          "Update ktamas77/firebase-php at least to 2.2.2",
          "Update lcobucci/jwt at least to 3.3.1",
          "Update league/flysystem at least to 1.0.55",
          "Update lexik/jwt-authentication-bundle at least to 2.6.4",
          "Update michelf/php-markdown at least to 1.8.0",
          "Update mobiledetect/mobiledetectlib at least to 2.8.34",
          "Update monolog/monolog at least to 1.25.1",
          "Update mtdowling/jmespath.php at least to 2.4.0",
          "Update myclabs/deep-copy at least to 1.9.3",
          "Update myclabs/php-enum at least to 1.7.2",
          "Update namshi/jose at least to 7.2.3",
          "Update nelmio/cors-bundle at least to 1.5.6",
          "Warning (minor severity): nelmio/cors-bundle does not have version that is fully compatible with PHP 7.3 (latest known 1.5.6)",
          "Update nelmio/api-doc-bundle at least to 2.13.4",
          "Update noxlogic/ratelimit-bundle at least to 1.14.0",
          "Warning (minor severity): noxlogic/ratelimit-bundle does not have version that is fully compatible with PHP 7.3 (latest known 1.14.0)",
          "Update ocramius/package-versions at least to 1.5.1",
          "Update ocramius/proxy-manager at least to 2.2.0",
          "Update opis/json-schema at least to 1.0.18",
          "Update phar-io/manifest at least to 1.0.3",
          "Update phar-io/version at least to 2.0.1",
          "Update php-amqplib/php-amqplib at least to 2.8.0",
          "Update php-amqplib/rabbitmq-bundle at least to 1.14.4",
          "Warning (minor severity): php-amqplib/rabbitmq-bundle does not have version that is fully compatible with PHP 7.3 (latest known 1.14.4)",
          "Update php-cs-fixer/diff at least to 1.3.0",
          "Update php-http/client-common at least to 2.0.0",
          "Update php-http/curl-client at least to 2.0.0",
          "Update php-http/discovery at least to 1.7.0",
          "Update php-http/httplug at least to 2.0.0",
          "Update php-http/message at least to 1.8.0",
          "Update php-http/message-factory at least to 1.0.2",
          "Update php-http/promise at least to 1.0.0",
          "Update phpdocumentor/reflection-common at least to 2.0.0",
          "Update phpdocumentor/reflection-docblock at least to 4.3.2",
          "Update phpdocumentor/type-resolver at least to 1.0.1",
          "Update phpseclib/phpseclib at least to 2.0.23",
          "Update phpspec/prophecy at least to 1.8.1",
          "Update phpunit/php-code-coverage at least to 7.0.0",
          "Update phpunit/php-file-iterator at least to 2.0.2",
          "Update phpunit/php-text-template at least to 1.2.1",
          "Update phpunit/php-timer at least to 2.1.2",
          "Update phpunit/php-token-stream at least to 3.1.1",
          "Update phpunit/phpunit at least to 8.0",
          "Update ql/uri-template at least to 1.1.3",
          "Update ralouphie/getallheaders at least to 3.0.3",
          "Update ramsey/uuid at least to 3.8.0",
          "Update riverline/multipart-parser at least to 2.0.5",
          "Update rize/uri-template at least to 0.3.2",
          "Warning (minor severity): rize/uri-template does not have version that is fully compatible with PHP 7.3 (latest known 0.3.2)",
          "Update sebastian/code-unit-reverse-lookup at least to 1.0.1",
          "Update sebastian/comparator at least to 3.0.2",
          "Update sebastian/diff at least to 3.0.2",
          "Update sebastian/environment at least to 4.2.2",
          "Update sebastian/exporter at least to 3.1.2",
          "Update sebastian/global-state at least to 3.0.0",
          "Update sebastian/object-enumerator at least to 3.0.3",
          "Update sebastian/object-reflector at least to 1.1.1",
          "Update sebastian/recursion-context at least to 3.0.0",
          "Update sebastian/resource-operations at least to 2.0.1",
          "Update sebastian/type at least to 1.0.0",
          "Update sebastian/version at least to 2.0.1",
          "Update sensio/distribution-bundle at least to 5.0.25",
          "Update sensio/generator-bundle at least to 3.1.7",
          "Update sensio/framework-extra-bundle at least to 5.4.1",
          "Update sensiolabs/security-checker at least to 6.0.2",
          "Update sentry/sdk at least to 2.0.4",
          "Update sentry/sentry at least to 2.1.3",
          "Update sentry/sentry-symfony at least to 3.1.0",
          "Update skyeng/php-lemmatizer at least to 1.0.3",
          "Unknown package some_vendor/some_package version 1.2.3",
          "Update suncat/mobile-detect-bundle at least to 1.1.1",
          "Update superbalist/flysystem-google-storage at least to 7.2.1",
          "Update swiftmailer/swiftmailer at least to 6.2.1",
          "Update symfony/assetic-bundle at least to 2.8.2",
          "Update symfony/http-client at least to 4.3.4",
          "Update symfony/http-client-contracts at least to 1.1.6",
          "Update symfony/mime at least to 4.3.4",
          "Update symfony/monolog-bundle at least to 3.1.2",
          "Update symfony/phpunit-bridge at least to 3.4.31",
          "Update symfony/polyfill-apcu at least to 1.12.0",
          "Update symfony/polyfill-ctype at least to 1.12.0",
          "Update symfony/polyfill-iconv at least to 1.12.0",
          "Update symfony/polyfill-intl-icu at least to 1.12.0",
          "Update symfony/polyfill-intl-idn at least to 1.12.0",
          "Update symfony/polyfill-mbstring at least to 1.12.0",
          "Update symfony/polyfill-util at least to 1.12.0",
          "Update symfony/swiftmailer-bundle at least to 3.2.8",
          "Warning (minor severity): symfony/swiftmailer-bundle does not have version that is fully compatible with PHP 7.3 (latest known 3.2.8)",
          "Update symfony/symfony at least to 3.4.31",
          "Update theseer/tokenizer at least to 1.1.3",
          "Update twig/twig at least to 2.11.3",
          "Update webmozart/assert at least to 1.5.0",
          "Update welp/mailchimp-bundle at least to 1.2.3",
          "Update willdurand/jsonp-callback-validator at least to 1.1.0",
          "Update willdurand/negotiation at least to 2.3.1",
          "Update zendframework/zend-code at least to 3.3.2",
          "Update zendframework/zend-diactoros at least to 2.1.3",
          "Update zendframework/zend-eventmanager at least to 3.2.1",
          "\n",
          "Processed 1 file, found 1 file with potential problems",
          "src/test.php",
          "================================================================================",
          "Check that parameter of get_class() cannot be null",
          "\t1\t    $myObj = getMyObj();",
          "\t2\t    $a = get_class($myObj);",
          "--------------------------------------------------------------------------------",
          "Check that parameter of count() is always countable",
          "\t1\t    $myObj = getMyObj();",
          "\t2\t    $a = get_class($myObj);",
          "\t3\t    $arr = '123';",
          "\t4\t    echo count($arr);",
          "--------------------------------------------------------------------------------",
          "Check that result of array_unique with sort_flags = SORT_STRING does not use keys for non-associative arrays (it may be reindexed)",
          "\t5\t    return array_unique ([1, 2, 2, 3])[0];",
          "\t6\t    is_object ($myObj);",
          "\t7\t    if (number_format(-0.01, 0) === '-0') {",
          "\t8\t        return 123;",
          "\t9\t    }",
          "--------------------------------------------------------------------------------",
          "Check that parameter of is_object() cannot be __PHP_Incomplete_Class (now it returns TRUE instead of FALSE)",
          "\t2\t    $a = get_class($myObj);",
          "\t3\t    $arr = '123';",
          "\t4\t    echo count($arr);",
          "\t5\t    return array_unique ([1, 2, 2, 3])[0];",
          "\t6\t    is_object ($myObj);",
          "--------------------------------------------------------------------------------",
          "Check that result of number_format is not compared with \"-0\"",
          "\t7\t    if (number_format(-0.01, 0) === '-0') {",
          "\t8\t        return 123;",
          "\t9\t    }",
          "--------------------------------------------------------------------------------",
          "Check that result of gettype is not compared with \"unknown type\" (for closed resources now it returns \"resource (closed)\")",
          "\t12\t    return (gettype($resource) === 'unknown_type') ? true : false;",
          "\t13\t    bcmod('4', '3.5');",
          "\t14\t    hash_hmac_file('crc32', 'my_data');",
          "--------------------------------------------------------------------------------",
          "Check that bcmod result is not compared to int (now result is not rounded)",
          "\t13\t    bcmod('4', '3.5');",
          "\t14\t    hash_hmac_file('crc32', 'my_data');",
          "\t15\t    return mt_rand (12432523);",
          "--------------------------------------------------------------------------------",
          "Check that hash_hmac, hash_hmac_file, hash_pbkdf2 function do not use one of the following algorithms adler32, crc32, crc32b, fnv132, fnv1a32, fnv164, fnv1a64, joaat",
          "\t12\t    return (gettype($resource) === 'unknown_type') ? true : false;",
          "\t13\t    bcmod('4', '3.5');",
          "\t14\t    hash_hmac_file('crc32', 'my_data');",
          "--------------------------------------------------------------------------------",
          "Check that hash_hmac, hash_hmac_file, hash_pbkdf2 function do not use one of the following algorithms adler32, crc32, crc32b, fnv132, fnv1a32, fnv164, fnv1a64, joaat",
          "\t150\t      }",
          "\t151\t    }",
          "\t152\t    hash_hmac      ('crc32', 'my_data');",
          "--------------------------------------------------------------------------------",
          "Check that hash_hmac, hash_hmac_file, hash_pbkdf2 function do not use one of the following algorithms adler32, crc32, crc32b, fnv132, fnv1a32, fnv164, fnv1a64, joaat",
          "\t151\t    }",
          "\t152\t    hash_hmac      ('crc32', 'my_data');",
          "\t153\t    hash_pbkdf2      ('crc32', 'my_data');",
          "--------------------------------------------------------------------------------",
          "Check that hash_init with HASH_HMAC parameter does not use one of the following algorithms adler32, crc32, crc32b, fnv132, fnv1a32, fnv164, fnv1a64, joaat",
          "\t152\t    hash_hmac      ('crc32', 'my_data');",
          "\t153\t    hash_pbkdf2      ('crc32', 'my_data');",
          "\t154\t    hash_init       ('crc32',        HASH_HMAC);",
          "--------------------------------------------------------------------------------",
          "If rand or mt_rand is called with fixed seed, resulting sequence after migration may differ from current",
          "\t13\t    bcmod('4', '3.5');",
          "\t14\t    hash_hmac_file('crc32', 'my_data');",
          "\t15\t    return mt_rand (12432523);",
          "\t16\t    $string = <<<MYSTR",
          "\t17\t        MYSTR - error!",
          "--------------------------------------------------------------------------------",
          "Check, that value for key \"zone\" in the result of date_parse_from_format is not used (now it contains seconds with inverted sign instead of minutes)",
          "\t30\t    $result = date_parse_from_format('dd.mm.yyyy hh:nn:ssTZ');",
          "\t31\t    echo $result['zone'];",
          "\t32\t    throw new JsonException();",
          "\t33\t    const JSON_THROW_ON_ERROR = 35;",
          "\t34\t    __autoload('vendor/autoload.php');",
          "--------------------------------------------------------------------------------",
          "Replace __autoload() with spl_autoload_register()",
          "\t34\t    __autoload('vendor/autoload.php');",
          "--------------------------------------------------------------------------------",
          "Replace png2wbmp() with imagecreatefrompng() and imagewbmp()",
          "\t35\t    return png2wbmp('my_image.png');",
          "--------------------------------------------------------------------------------",
          "Replace jpeg2wbmp() with imagecreatefromjpeg() and imagewbmp()",
          "\t36\t    return jpeg2wbmp('my_image.jpg');",
          "--------------------------------------------------------------------------------",
          "Replace (unset) cast with call of unset or just NULL",
          "\t51\t    (unset)$myvar;",
          "--------------------------------------------------------------------------------",
          "Check whether parse_str is called with second parameter, now it is necessary",
          "\t52\t    parse_str($a);",
          "--------------------------------------------------------------------------------",
          "Replace gmp_random() with gmp_random_bits() or gmp_random_range()",
          "\t53\t    gmp_random(1, 3);",
          "--------------------------------------------------------------------------------",
          "Replace each() with foreach()",
          "\t54\t    each($arr as $key => $value) {",
          "--------------------------------------------------------------------------------",
          "Check whether assert() is called with string argument. If so, replace with direct call and fix zend.assertions in ini-file",
          "\t52\t    parse_str($a);",
          "\t53\t    gmp_random(1, 3);",
          "\t54\t    each($arr as $key => $value) {",
          "\t55\t        assert('$i = 3');",
          "--------------------------------------------------------------------------------",
          "Check whether assert() is called with string argument. If so, replace with direct call and fix zend.assertions in ini-file",
          "\t56\t    }",
          "\t57\t    filter_var ($t, FILTER_FLAG_SCHEME_REQUIRED, FILTER_FLAG_HOST_REQUIRED);",
          "\t58\t    define('GREETING', 'Hello you.', true);",
          "\t59\t    public static function assert (string $eval) {",
          "--------------------------------------------------------------------------------",
          "Replace $php_errormsg with error_get_last()",
          "\t68\t    var_dump($php_errormsg);",
          "--------------------------------------------------------------------------------",
          "Replace create_function with anonymous function declaration",
          "\t69\t    $myfunc = create_function  ();",
          "--------------------------------------------------------------------------------",
          "Remove usage of $errcontext, use debugger instead",
          "\t70\t    print_r($errcontext);",
          "--------------------------------------------------------------------------------",
          "Replace read_exif_data with exif_read_data",
          "\t73\t    read_exif_data();",
          "--------------------------------------------------------------------------------",
          "Replace INTL_IDNA_VARIANT_2003 with INTL_IDNA_VARIANT_UTS46",
          "\t72\t    echo INTL_IDNA_VARIANT_2003;",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to setUp or setUpBeforeClass",
          "\t105\t    public function          setUp     (        )",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to setUp or setUpBeforeClass",
          "\t108\t    public function    setUpBeforeClass(        )",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to tearDown or tearDownBeforeClass",
          "\t111\t    public function     tearDown(   )                        void",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to tearDown or tearDownBeforeClass",
          "\t114\t    public function tearDownAfterClass(   )",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to assertPreConditions or assertPostConditions",
          "\t117\t    public function assertPreConditions()    id",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to assertPreConditions or assertPostConditions",
          "\t120\t    public function assertPostConditions()",
          "--------------------------------------------------------------------------------",
          "Add void return type hint to onNotSuccessfulTest",
          "\t123\t    public function onNotSuccessfulTest(   )",
          "--------------------------------------------------------------------------------",
          "Replace assertInternalType and assertNotInternalType methods with more specific methods",
          "\t126\t    $this->assertInternalType($abc);",
          "--------------------------------------------------------------------------------",
          "Replace assertInternalType and assertNotInternalType methods with more specific methods",
          "\t127\t    static::assertNotInternalType($def);",
          "--------------------------------------------------------------------------------",
          "Remove assertArraySubset usage, refactor to manual check",
          "\t128\t    self::assertArraySubset(['a', 'b'], ['c', 'd']);",
          "--------------------------------------------------------------------------------",
          "Replace usage of optional arguments of assertEquals and assertNotEquals with more specific assertions",
          "\t129\t    $this->assertEquals($a, $b, 'message', 13);",
          "--------------------------------------------------------------------------------",
          "Replace usage of optional arguments of assertEquals and assertNotEquals with more specific assertions",
          "\t132\t    $this->assertNotEquals($h, $i, 'my message', 'bbb');",
          "--------------------------------------------------------------------------------",
          "Replace usage of assertAttribute-prefixed methods with manual processing",
          "\t135\t    $this->assertAttributeInt(345);",
          "--------------------------------------------------------------------------------",
          "Replace usage of attribute and attributeEqualTo methods with manual processing",
          "\t136\t    static::attribute(ddd);",
          "--------------------------------------------------------------------------------",
          "Replace usage of attribute and attributeEqualTo methods with manual processing",
          "\t137\t    self::attributeEqualTo        ( something);",
          "--------------------------------------------------------------------------------",
          "Replace usage of readAttribute method with manual processing",
          "\t138\t    $this->readAttribute    (   other);",
          "--------------------------------------------------------------------------------",
          "Replace usage of getStaticAttribute or getObjectAttribute methods with manual processing",
          "\t139\t    static::getStaticAttribute(my::attr);",
          "--------------------------------------------------------------------------------",
          "Replace usage of getStaticAttribute or getObjectAttribute methods with manual processing",
          "\t140\t    self::getObjectAttribute(my->attr);",
          "--------------------------------------------------------------------------------",
          "Check that assertContains or assertNotContains does not use string $haystack or additional parameters, otherwise use string-methods assertStringContainsString or assertStringNotContainsString",
          "\t141\t    $this->assertContains($a, [$b]);",
          "--------------------------------------------------------------------------------",
          "Check that assertContains or assertNotContains does not use string $haystack or additional parameters, otherwise use string-methods assertStringContainsString or assertStringNotContainsString",
          "\t142\t    static::assertNotContains    ($c, [$d]);",
          "--------------------------------------------------------------------------------",
          "Remove usage of TestListener",
          "\t143\t    class MyTestListener implements TestListener",
          "--------------------------------------------------------------------------------",
          "Remove usage of expectedException-prefixed annotations",
          "\t146\t       * @expectedExceptionCode 3",
          "--------------------------------------------------------------------------------",
          "Check that Heredoc/Nowdoc string does not contain closing identifier inside in the beginning of line",
          "\t16\t    $string = <<<MYSTR",
          "\t17\t        MYSTR - error!",
          "\t18\tMYSTR;",
          "\t19\t    preg_replace('/123/', '11', '1234567');",
          "\t20\t    switch ($a) {",
          "\t21\t        case 123:",
          "\t22\t            echo 123;",
          "--------------------------------------------------------------------------------",
          "Check that pattern corresponds PCRE2 syntax",
          "\t16\t    $string = <<<MYSTR",
          "\t17\t        MYSTR - error!",
          "\t18\tMYSTR;",
          "\t19\t    preg_replace('/123/', '11', '1234567');",
          "\t20\t    switch ($a) {",
          "--------------------------------------------------------------------------------",
          "Check that continue is not inside switch, otherwise change to break or continue 2",
          "\t17\t        MYSTR - error!",
          "\t18\tMYSTR;",
          "\t19\t    preg_replace('/123/', '11', '1234567');",
          "\t20\t    switch ($a) {",
          "\t21\t        case 123:",
          "\t22\t            echo 123;",
          "\t23\t            continue;",
          "--------------------------------------------------------------------------------",
          "Check that JsonException is not in the global namespace (now global JsonException is a part of PHP)",
          "\t29\t    }",
          "\t30\t    $result = date_parse_from_format('dd.mm.yyyy hh:nn:ssTZ');",
          "\t31\t    echo $result['zone'];",
          "\t32\t    throw new JsonException();",
          "--------------------------------------------------------------------------------",
          "Check that JSON_THROW_ON_ERROR is not in the global namespace (now global JSON_THROW_ON_ERROR is a part of PHP)",
          "\t30\t    $result = date_parse_from_format('dd.mm.yyyy hh:nn:ssTZ');",
          "\t31\t    echo $result['zone'];",
          "\t32\t    throw new JsonException();",
          "\t33\t    const JSON_THROW_ON_ERROR = 35;",
          "--------------------------------------------------------------------------------",
          "Check that this is not static field assignment by reference (now they cannot be separated by assignment by reference)",
          "\t38\t    MyClass::$value = &$myVal;",
          "\t39\t    $myVal = 1;",
          "\t40\t    $size = getimagesize('my_image.bmp');",
          "\t41\t    return $size['mime'] === 'image/x-ms-bmp';",
          "--------------------------------------------------------------------------------",
          "Check that value with key \"mime\" of getimagesize result is not compared to image/x-ms-bmp",
          "\t40\t    $size = getimagesize('my_image.bmp');",
          "\t41\t    return $size['mime'] === 'image/x-ms-bmp';",
          "\t42\t    mb_ereg('(?<word>\\w+)', '国', $matches);",
          "\t43\t    strpos($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check usage of mb_ereg_-prefixed functions, now named captures are returned both using their group number and their name",
          "\t42\t    mb_ereg('(?<word>\\w+)', '国', $matches);",
          "\t43\t    strpos($a, $b, $c);",
          "\t44\t    strrpos($a, $b, $c);",
          "\t45\t    stripos($a, $b, $c);",
          "\t46\t    strripos($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t40\t    $size = getimagesize('my_image.bmp');",
          "\t41\t    return $size['mime'] === 'image/x-ms-bmp';",
          "\t42\t    mb_ereg('(?<word>\\w+)', '国', $matches);",
          "\t43\t    strpos($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t41\t    return $size['mime'] === 'image/x-ms-bmp';",
          "\t42\t    mb_ereg('(?<word>\\w+)', '国', $matches);",
          "\t43\t    strpos($a, $b, $c);",
          "\t44\t    strrpos($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t42\t    mb_ereg('(?<word>\\w+)', '国', $matches);",
          "\t43\t    strpos($a, $b, $c);",
          "\t44\t    strrpos($a, $b, $c);",
          "\t45\t    stripos($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t43\t    strpos($a, $b, $c);",
          "\t44\t    strrpos($a, $b, $c);",
          "\t45\t    stripos($a, $b, $c);",
          "\t46\t    strripos($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t44\t    strrpos($a, $b, $c);",
          "\t45\t    stripos($a, $b, $c);",
          "\t46\t    strripos($a, $b, $c);",
          "\t47\t    strstr($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t45\t    stripos($a, $b, $c);",
          "\t46\t    strripos($a, $b, $c);",
          "\t47\t    strstr($a, $b, $c);",
          "\t48\t    strchr($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t46\t    strripos($a, $b, $c);",
          "\t47\t    strstr($a, $b, $c);",
          "\t48\t    strchr($a, $b, $c);",
          "\t49\t    strrchr($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t47\t    strstr($a, $b, $c);",
          "\t48\t    strchr($a, $b, $c);",
          "\t49\t    strrchr($a, $b, $c);",
          "\t50\t    stristr($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Replace image2wbmp() with imagewbmp()",
          "\t37\t    return image2wbmp('my_image.bmp');",
          "--------------------------------------------------------------------------------",
          "Use FILTER_VALIDATE_URL without FILTER_FLAG_SCHEME_REQUIRED",
          "\t57\t    filter_var ($t, FILTER_FLAG_SCHEME_REQUIRED, FILTER_FLAG_HOST_REQUIRED);",
          "--------------------------------------------------------------------------------",
          "Use FILTER_VALIDATE_URL without FILTER_FLAG_HOST_REQUIRED",
          "\t57\t    filter_var ($t, FILTER_FLAG_SCHEME_REQUIRED, FILTER_FLAG_HOST_REQUIRED);",
          "--------------------------------------------------------------------------------",
          "Check whether case insensitive const is defined. If so, replace with usual const declaration and check all usages",
          "\t58\t    define('GREETING', 'Hello you.', true);",
          "--------------------------------------------------------------------------------",
          "Check whether assert is declared inside namespace, now it is forbidden, change function name",
          "\t59\t    public static function assert (string $eval) {",
          "--------------------------------------------------------------------------------",
          "Replace fgetss with fgets and manual tag removal",
          "\t62\t    fgetss('AAA<b>BBB</b>');",
          "--------------------------------------------------------------------------------",
          "Replace gzgetss with gzgets and manual tag removal",
          "\t63\t    gzgetss('AAA<b>BBB</b>');",
          "--------------------------------------------------------------------------------",
          "Replace stream filter string.strip_tags with manual tag removal",
          "\t64\t    stream_filter_append($fp, 'string.strip_tags');",
          "--------------------------------------------------------------------------------",
          "Replace mbregex_encoding with mb_regex_encoding",
          "\t65\t    mbregex_encoding($a, $b, $c)",
          "--------------------------------------------------------------------------------",
          "Replace mbsplit with mb_split",
          "\t67\t    mbsplit($a, $b, $c)",
          "--------------------------------------------------------------------------------",
          "Replace mbereg-prefixed function with corresponding mb_ereg_-prefixed function",
          "\t66\t    mbereg($a, $b, $c)"
        ]
      },
      {
        "_name": "7.2 to 7.3 no vendor",
        "version_from": "7.2",
        "version_to": "7.3",
        "expected_result": [
          "Package compatibility report:",
          "Update aws/aws-sdk-php at least to 3.112.5",
          "Update aws/aws-sdk-php-symfony at least to 1.3.0",
          "Update cloudconvert/cloudconvert-php at least to 2.2.1",
          "Update cloudinary/cloudinary_php at least to 1.14.0",
          "Update clue/stream-filter at least to 1.4.1",
          "Update composer/semver at least to 1.5.0",
          "Update composer/xdebug-handler at least to 1.3.3",
          "Update doctrine/annotations at least to 1.7.0",
          "Update doctrine/cache at least to 1.8.0",
          "Update doctrine/collections at least to 1.6.2",
          "Update doctrine/common at least to 2.11.0",
          "Update doctrine/data-fixtures at least to 1.3.2",
          "Update doctrine/dbal at least to 2.9.2",
          "Update doctrine/doctrine-bundle at least to 1.11.2",
          "Update doctrine/doctrine-cache-bundle at least to 1.3.5",
          "Update doctrine/doctrine-fixtures-bundle at least to 3.2.2",
          "Update doctrine/doctrine-migrations-bundle at least to 1.3.2",
          "Update doctrine/event-manager at least to 1.0.0",
          "Update doctrine/inflector at least to 1.3.0",
          "Update doctrine/instantiator at least to 1.2.0",
          "Update doctrine/lexer at least to 1.1.0",
          "Update doctrine/migrations at least to 1.8.1",
          "Update doctrine/orm at least to 2.6.3",
          "Update doctrine/persistence at least to 1.1.1",
          "Update doctrine/reflection at least to 1.0.0",
          "Update drewm/mailchimp-api at least to 2.5.4",
          "Update egulias/email-validator at least to 2.1.11",
          "Update fig/http-message-util at least to 1.1.3",
          "Update fig/link-util at least to 1.0.0",
          "Update firebase/php-jwt at least to 5.0.0",
          "Update fresh/doctrine-enum-bundle at least to 5.3.0",
          "Update friendsofphp/php-cs-fixer at least to 2.15.3",
          "Update friendsofsymfony/oauth-server-bundle at least to 2.0.0",
          "Update friendsofsymfony/oauth2-php at least to 1.2.3",
          "Update friendsofsymfony/rest-bundle at least to 2.5.0",
          "Warning (minor severity): friendsofsymfony/rest-bundle does not have version that is fully compatible with PHP 7.3 (latest known 2.5.0)",
          "Update giggsey/libphonenumber-for-php at least to 8.10.19",
          "Update giggsey/locale at least to 1.7.1",
          "Update google/apiclient at least to 2.4.0",
          "Update google/apiclient-services at least to 0.115",
          "Update google/auth at least to 1.5.2",
          "Update google/cloud-core at least to 1.33.0",
          "Update google/cloud-storage at least to 1.14.0",
          "Update google/crc32 at least to 0.1.0",
          "Update guzzlehttp/guzzle at least to 6.3.3",
          "Update guzzlehttp/promises at least to 1.3.1",
          "Update guzzlehttp/psr7 at least to 1.6.1",
          "Update helpscout/api at least to 2.4.0",
          "Update hoa/compiler at least to 3.17.08.08",
          "Warning (minor severity): hoa/compiler does not have version that is fully compatible with PHP 7.3 (latest known 3.17.08.08)",
          "Update hoa/consistency at least to 1.17.05.02",
          "Update hoa/event at least to 1.17.01.13",
          "Update hoa/exception at least to 1.17.01.16",
          "Update hoa/file at least to 1.17.07.11",
          "Update hoa/iterator at least to 2.17.01.10",
          "Update hoa/math at least to 1.17.05.16",
          "Update hoa/protocol at least to 1.17.01.14",
          "Update hoa/regex at least to 1.17.01.13",
          "Update hoa/stream at least to 1.17.02.21",
          "Update hoa/ustring at least to 4.17.01.16",
          "Update hoa/visitor at least to 2.17.01.16",
          "Update hoa/zformat at least to 1.17.01.10",
          "Update http-interop/http-factory-guzzle at least to 1.0.0",
          "Update incenteev/composer-parameter-handler at least to 2.1.3",
          "Update jdorn/sql-formatter at least to 1.2.17",
          "Update jean85/pretty-package-versions at least to 1.2",
          "Update jms/metadata at least to 2.1.0",
          "Update jms/serializer at least to 3.3.0",
          "Update jms/serializer-bundle at least to 3.4.1",
          "Update kreait/clock at least to 1.0.1",
          "Update kreait/firebase-php at least to 4.32.0",
          "Update kreait/firebase-tokens at least to 1.9.1",
          "Update kreait/gcp-metadata at least to 1.0.1",
          "Update kriswallsmith/assetic at least to 1.4.0",
          "Update ktamas77/firebase-php at least to 2.2.2",
          "Update lcobucci/jwt at least to 3.3.1",
          "Update league/flysystem at least to 1.0.55",
          "Update lexik/jwt-authentication-bundle at least to 2.6.4",
          "Update michelf/php-markdown at least to 1.8.0",
          "Update mobiledetect/mobiledetectlib at least to 2.8.34",
          "Update monolog/monolog at least to 1.25.1",
          "Update mtdowling/jmespath.php at least to 2.4.0",
          "Update myclabs/deep-copy at least to 1.9.3",
          "Update myclabs/php-enum at least to 1.7.2",
          "Update namshi/jose at least to 7.2.3",
          "Update nelmio/cors-bundle at least to 1.5.6",
          "Warning (minor severity): nelmio/cors-bundle does not have version that is fully compatible with PHP 7.3 (latest known 1.5.6)",
          "Update nelmio/api-doc-bundle at least to 2.13.4",
          "Update noxlogic/ratelimit-bundle at least to 1.14.0",
          "Warning (minor severity): noxlogic/ratelimit-bundle does not have version that is fully compatible with PHP 7.3 (latest known 1.14.0)",
          "Update ocramius/package-versions at least to 1.5.1",
          "Update ocramius/proxy-manager at least to 2.2.0",
          "Update opis/json-schema at least to 1.0.18",
          "Update phar-io/manifest at least to 1.0.3",
          "Update phar-io/version at least to 2.0.1",
          "Update php-amqplib/php-amqplib at least to 2.8.0",
          "Update php-amqplib/rabbitmq-bundle at least to 1.14.4",
          "Warning (minor severity): php-amqplib/rabbitmq-bundle does not have version that is fully compatible with PHP 7.3 (latest known 1.14.4)",
          "Update php-cs-fixer/diff at least to 1.3.0",
          "Update php-http/client-common at least to 2.0.0",
          "Update php-http/curl-client at least to 2.0.0",
          "Update php-http/discovery at least to 1.7.0",
          "Update php-http/httplug at least to 2.0.0",
          "Update php-http/message at least to 1.8.0",
          "Update php-http/message-factory at least to 1.0.2",
          "Update php-http/promise at least to 1.0.0",
          "Update phpdocumentor/reflection-common at least to 2.0.0",
          "Update phpdocumentor/reflection-docblock at least to 4.3.2",
          "Update phpdocumentor/type-resolver at least to 1.0.1",
          "Update phpseclib/phpseclib at least to 2.0.23",
          "Update phpspec/prophecy at least to 1.8.1",
          "Update phpunit/php-code-coverage at least to 7.0.0",
          "Update phpunit/php-file-iterator at least to 2.0.2",
          "Update phpunit/php-text-template at least to 1.2.1",
          "Update phpunit/php-timer at least to 2.1.2",
          "Update phpunit/php-token-stream at least to 3.1.1",
          "Update phpunit/phpunit at least to 8.0",
          "Update ql/uri-template at least to 1.1.3",
          "Update ralouphie/getallheaders at least to 3.0.3",
          "Update ramsey/uuid at least to 3.8.0",
          "Update riverline/multipart-parser at least to 2.0.5",
          "Update rize/uri-template at least to 0.3.2",
          "Warning (minor severity): rize/uri-template does not have version that is fully compatible with PHP 7.3 (latest known 0.3.2)",
          "Update sebastian/code-unit-reverse-lookup at least to 1.0.1",
          "Update sebastian/comparator at least to 3.0.2",
          "Update sebastian/diff at least to 3.0.2",
          "Update sebastian/environment at least to 4.2.2",
          "Update sebastian/exporter at least to 3.1.2",
          "Update sebastian/global-state at least to 3.0.0",
          "Update sebastian/object-enumerator at least to 3.0.3",
          "Update sebastian/object-reflector at least to 1.1.1",
          "Update sebastian/recursion-context at least to 3.0.0",
          "Update sebastian/resource-operations at least to 2.0.1",
          "Update sebastian/type at least to 1.0.0",
          "Update sebastian/version at least to 2.0.1",
          "Update sensio/distribution-bundle at least to 5.0.25",
          "Update sensio/generator-bundle at least to 3.1.7",
          "Update sensio/framework-extra-bundle at least to 5.4.1",
          "Update sensiolabs/security-checker at least to 6.0.2",
          "Update sentry/sdk at least to 2.0.4",
          "Update sentry/sentry at least to 2.1.3",
          "Update sentry/sentry-symfony at least to 3.1.0",
          "Update skyeng/php-lemmatizer at least to 1.0.3",
          "Unknown package some_vendor/some_package version 1.2.3",
          "Update suncat/mobile-detect-bundle at least to 1.1.1",
          "Update superbalist/flysystem-google-storage at least to 7.2.1",
          "Update swiftmailer/swiftmailer at least to 6.2.1",
          "Update symfony/assetic-bundle at least to 2.8.2",
          "Update symfony/http-client at least to 4.3.4",
          "Update symfony/http-client-contracts at least to 1.1.6",
          "Update symfony/mime at least to 4.3.4",
          "Update symfony/monolog-bundle at least to 3.1.2",
          "Update symfony/phpunit-bridge at least to 3.4.31",
          "Update symfony/polyfill-apcu at least to 1.12.0",
          "Update symfony/polyfill-ctype at least to 1.12.0",
          "Update symfony/polyfill-iconv at least to 1.12.0",
          "Update symfony/polyfill-intl-icu at least to 1.12.0",
          "Update symfony/polyfill-intl-idn at least to 1.12.0",
          "Update symfony/polyfill-mbstring at least to 1.12.0",
          "Update symfony/polyfill-util at least to 1.12.0",
          "Update symfony/swiftmailer-bundle at least to 3.2.8",
          "Warning (minor severity): symfony/swiftmailer-bundle does not have version that is fully compatible with PHP 7.3 (latest known 3.2.8)",
          "Update symfony/symfony at least to 3.4.31",
          "Update theseer/tokenizer at least to 1.1.3",
          "Update twig/twig at least to 2.11.3",
          "Update webmozart/assert at least to 1.5.0",
          "Update welp/mailchimp-bundle at least to 1.2.3",
          "Update willdurand/jsonp-callback-validator at least to 1.1.0",
          "Update willdurand/negotiation at least to 2.3.1",
          "Update zendframework/zend-code at least to 3.3.2",
          "Update zendframework/zend-diactoros at least to 2.1.3",
          "Update zendframework/zend-eventmanager at least to 3.2.1",
          "\n",
          "Processed 1 file, found 1 file with potential problems",
          "src/test.php",
          "================================================================================",
          "Check that Heredoc/Nowdoc string does not contain closing identifier inside in the beginning of line",
          "\t16\t    $string = <<<MYSTR",
          "\t17\t        MYSTR - error!",
          "\t18\tMYSTR;",
          "\t19\t    preg_replace('/123/', '11', '1234567');",
          "\t20\t    switch ($a) {",
          "\t21\t        case 123:",
          "\t22\t            echo 123;",
          "--------------------------------------------------------------------------------",
          "Check that pattern corresponds PCRE2 syntax",
          "\t16\t    $string = <<<MYSTR",
          "\t17\t        MYSTR - error!",
          "\t18\tMYSTR;",
          "\t19\t    preg_replace('/123/', '11', '1234567');",
          "\t20\t    switch ($a) {",
          "--------------------------------------------------------------------------------",
          "Check that continue is not inside switch, otherwise change to break or continue 2",
          "\t17\t        MYSTR - error!",
          "\t18\tMYSTR;",
          "\t19\t    preg_replace('/123/', '11', '1234567');",
          "\t20\t    switch ($a) {",
          "\t21\t        case 123:",
          "\t22\t            echo 123;",
          "\t23\t            continue;",
          "--------------------------------------------------------------------------------",
          "Check that JsonException is not in the global namespace (now global JsonException is a part of PHP)",
          "\t29\t    }",
          "\t30\t    $result = date_parse_from_format('dd.mm.yyyy hh:nn:ssTZ');",
          "\t31\t    echo $result['zone'];",
          "\t32\t    throw new JsonException();",
          "--------------------------------------------------------------------------------",
          "Check that JSON_THROW_ON_ERROR is not in the global namespace (now global JSON_THROW_ON_ERROR is a part of PHP)",
          "\t30\t    $result = date_parse_from_format('dd.mm.yyyy hh:nn:ssTZ');",
          "\t31\t    echo $result['zone'];",
          "\t32\t    throw new JsonException();",
          "\t33\t    const JSON_THROW_ON_ERROR = 35;",
          "--------------------------------------------------------------------------------",
          "Check that this is not static field assignment by reference (now they cannot be separated by assignment by reference)",
          "\t38\t    MyClass::$value = &$myVal;",
          "\t39\t    $myVal = 1;",
          "\t40\t    $size = getimagesize('my_image.bmp');",
          "\t41\t    return $size['mime'] === 'image/x-ms-bmp';",
          "--------------------------------------------------------------------------------",
          "Check that value with key \"mime\" of getimagesize result is not compared to image/x-ms-bmp",
          "\t40\t    $size = getimagesize('my_image.bmp');",
          "\t41\t    return $size['mime'] === 'image/x-ms-bmp';",
          "\t42\t    mb_ereg('(?<word>\\w+)', '国', $matches);",
          "\t43\t    strpos($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check usage of mb_ereg_-prefixed functions, now named captures are returned both using their group number and their name",
          "\t42\t    mb_ereg('(?<word>\\w+)', '国', $matches);",
          "\t43\t    strpos($a, $b, $c);",
          "\t44\t    strrpos($a, $b, $c);",
          "\t45\t    stripos($a, $b, $c);",
          "\t46\t    strripos($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t40\t    $size = getimagesize('my_image.bmp');",
          "\t41\t    return $size['mime'] === 'image/x-ms-bmp';",
          "\t42\t    mb_ereg('(?<word>\\w+)', '国', $matches);",
          "\t43\t    strpos($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t41\t    return $size['mime'] === 'image/x-ms-bmp';",
          "\t42\t    mb_ereg('(?<word>\\w+)', '国', $matches);",
          "\t43\t    strpos($a, $b, $c);",
          "\t44\t    strrpos($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t42\t    mb_ereg('(?<word>\\w+)', '国', $matches);",
          "\t43\t    strpos($a, $b, $c);",
          "\t44\t    strrpos($a, $b, $c);",
          "\t45\t    stripos($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t43\t    strpos($a, $b, $c);",
          "\t44\t    strrpos($a, $b, $c);",
          "\t45\t    stripos($a, $b, $c);",
          "\t46\t    strripos($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t44\t    strrpos($a, $b, $c);",
          "\t45\t    stripos($a, $b, $c);",
          "\t46\t    strripos($a, $b, $c);",
          "\t47\t    strstr($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t45\t    stripos($a, $b, $c);",
          "\t46\t    strripos($a, $b, $c);",
          "\t47\t    strstr($a, $b, $c);",
          "\t48\t    strchr($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t46\t    strripos($a, $b, $c);",
          "\t47\t    strstr($a, $b, $c);",
          "\t48\t    strchr($a, $b, $c);",
          "\t49\t    strrchr($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Check parameter $needle in functions strpos(), strrpos(), stripos(), strripos(), strstr(), strchr(), strrchr(), stristr(), now it should be string",
          "\t47\t    strstr($a, $b, $c);",
          "\t48\t    strchr($a, $b, $c);",
          "\t49\t    strrchr($a, $b, $c);",
          "\t50\t    stristr($a, $b, $c);",
          "--------------------------------------------------------------------------------",
          "Replace image2wbmp() with imagewbmp()",
          "\t37\t    return image2wbmp('my_image.bmp');",
          "--------------------------------------------------------------------------------",
          "Use FILTER_VALIDATE_URL without FILTER_FLAG_SCHEME_REQUIRED",
          "\t57\t    filter_var ($t, FILTER_FLAG_SCHEME_REQUIRED, FILTER_FLAG_HOST_REQUIRED);",
          "--------------------------------------------------------------------------------",
          "Use FILTER_VALIDATE_URL without FILTER_FLAG_HOST_REQUIRED",
          "\t57\t    filter_var ($t, FILTER_FLAG_SCHEME_REQUIRED, FILTER_FLAG_HOST_REQUIRED);",
          "--------------------------------------------------------------------------------",
          "Check whether case insensitive const is defined. If so, replace with usual const declaration and check all usages",
          "\t58\t    define('GREETING', 'Hello you.', true);",
          "--------------------------------------------------------------------------------",
          "Check whether assert is declared inside namespace, now it is forbidden, change function name",
          "\t59\t    public static function assert (string $eval) {",
          "--------------------------------------------------------------------------------",
          "Replace fgetss with fgets and manual tag removal",
          "\t62\t    fgetss('AAA<b>BBB</b>');",
          "--------------------------------------------------------------------------------",
          "Replace gzgetss with gzgets and manual tag removal",
          "\t63\t    gzgetss('AAA<b>BBB</b>');",
          "--------------------------------------------------------------------------------",
          "Replace stream filter string.strip_tags with manual tag removal",
          "\t64\t    stream_filter_append($fp, 'string.strip_tags');",
          "--------------------------------------------------------------------------------",
          "Replace mbregex_encoding with mb_regex_encoding",
          "\t65\t    mbregex_encoding($a, $b, $c)",
          "--------------------------------------------------------------------------------",
          "Replace mbsplit with mb_split",
          "\t67\t    mbsplit($a, $b, $c)",
          "--------------------------------------------------------------------------------",
          "Replace mbereg-prefixed function with corresponding mb_ereg_-prefixed function",
          "\t66\t    mbereg($a, $b, $c)"
        ]
      }
    ]
  }
]